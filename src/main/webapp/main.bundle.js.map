{"version":3,"sources":["webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src async","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/answer.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/app.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/app.module.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/auth-guard.service.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/choice.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/choicestyle.css","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/colabbg2.jpg","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/edit.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/feed.service.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/login.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/loginstyle.css","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/mainpage.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/nav.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/post.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/postit.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/postit.service.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/profile.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/profilebadge.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/settings.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/sort.service.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/sortfeed.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/user.service.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/user.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/environments/environment.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { Component, Input } from '@angular/core';\r\nimport { Post } from './post';\r\n\r\n@Component\r\n({ selector: 'answer',\r\n    template: `<div class=\"content answer\">\r\n                 <div class=\"flexcol\">\r\n                   <div class=\"flexrow\" >\r\n                     <div class=\"flexcol\" style=\"flex-basis: 8%\">\r\n                       <div class=\"item stats\">\r\n                         <img src=\"pic.jpg\" class=\"feedpic\">\r\n                           <div class=\"text\">\r\n                             <ul class=\"ulstat\">\r\n                               <li>Likes</li>\r\n                               <li>{{data.clicks}}w</li>\r\n                             </ul>\r\n                            </div>\r\n                        </div>\r\n                     </div>                     \r\n                     <div class=\"item_2 flexcol\">\r\n                        <div class=\"item\">\r\n                           <h1> {{data.title}} </h1>\r\n                              {{data.content_text}} \r\n                        </div>\r\n                            <br>\r\n                             <span class=\"created\">Created: 02.06.2017 17:31 Last modified: 03.06.2017 11:30</span>\r\n                        </div>\r\n                     <div class=\"item_4 symbols\">\r\n                        <a href=\"#\" class=\"nounder\" (click)=\"editPost()\">\r\n                          <i class=\"material-icons\">create</i>\r\n                        </a>\r\n                        <br>\r\n                        <br>\r\n                        <a href=\"#\" class=\"nounder\" (click)=\"deletePost()\">\r\n                          <i class=\"material-icons\">clear</i>\r\n                        </a>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n                </div> `\r\n})\r\n\r\nexport class AnswerComponent {\r\n@Input() data : Post;\r\n\r\n  editPost(): void {\r\n\r\n  }\r\n\r\n  deletePost(): void {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/answer.component.ts","import { Component, OnInit, Input} from '@angular/core';\nimport { AnswerComponent } from './answer.component';\nimport { NavbarComponent } from './nav.component';\nimport { ProfileBadge } from './profilebadge.component';\nimport {Post} from './post';\nimport { ProfileBadgeData } from './profilebadge';\nimport { User } from './user';\nimport { UserService } from './user.service';\nimport {FormsModule} from \"@angular/forms\";\nimport { ChoiceComponent } from './choice.component';\nimport {AuthGuard} from \"./auth-guard.service\";\n\n@Component({\n  selector: 'app-root',\n  template: `   \n   \n    <div *ngIf=\"isLoggedIn\">\n    <navbar> </navbar>\n    </div>\n    <router-outlet></router-outlet>\n  `,\n})\nexport class AppComponent implements OnInit {\n  title = 'CoLAB';\n  testUser : User;\n  testUser2: User;\n\n  tempNewPost : Post = new Post();\n  isLoggedIn : boolean;\n  subscriptionUser : any;\n\n\n  constructor(private userService: UserService)\n  {\n\n\n      // this.subscriptionFeed = this.feedService.needToUpdateFeed.subscribe( (val) =>  { this.feedPosts = this.feedService.getFeedPost(); console.log(\"update me\"); });\n\n  }\n\n  profbadge: ProfileBadgeData = {\n   amountposts: 1\n  };\n\n\n  ngOnInit(): void {\n    console.log(\" ###################### APP COMPONENT ON INIT ##############################\");\n\n    console.log(\"app component calling check\");\n    this.userService.check();\n    this.isLoggedIn = this.userService.isLoggedIn;\n    this.subscriptionUser = this.userService.updateUserStatus.subscribe(val => this.isLoggedIn = this.userService.isLoggedIn);\n  }\n\n\n  private handleError(error: any): Promise<any> {\n    console.error('Fehleeeer', error); // for demo purposes onlyg\n    return Promise.reject(error.message || error);\n  }\n\n  private setGlobalUser(u : User) : void {\n      this.userService.setUser(u);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/app.component.ts","import { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PostComponent } from './postit.component';\nimport { AnswerComponent } from './answer.component';\nimport { NavbarComponent } from './nav.component';\nimport { ProfileBadge } from './profilebadge.component';\nimport { SortBy } from './sortfeed.component';\nimport { Post } from './post';\nimport { HttpModule }    from '@angular/http';\nimport { UserService } from './user.service';\nimport {TestComponent} from \"./test.component\";\nimport {EditComponent } from './edit.component';\nimport {FormsModule} from \"@angular/forms\";\nimport { ChoiceComponent } from './choice.component';\nimport { AppRoutingModule }     from './app-routing.module';\nimport { MainpageComponent } from './mainpage.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProfileComponent } from './profile.component';\nimport {SortService} from \"./sort.service\";\nimport {FeedService} from \"./feed.service\";\nimport { LoginComponent } from './login.component';\nimport { AuthGuard } from './auth-guard.service';\nimport { SettingsComponent } from './settings.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    ChoiceComponent,\n    AnswerComponent,\n    NavbarComponent,\n    ProfileBadge,\n    SortBy,\n    EditComponent,\n    MainpageComponent,\n    ProfileComponent,\n    LoginComponent,\n    SettingsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n\n    RouterModule.forRoot([\n      {\n        path: 'profile/:id',\n        component: ProfileComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent,\n        canActivate: [AuthGuard]\n      }, {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'settings',\n        component: SettingsComponent,\n        canActivate: [AuthGuard]\n      },{\n        path: 'test',\n        component: SettingsComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: '',\n        component: MainpageComponent,\n        canActivate: [AuthGuard]\n      }\n      ,\n      {\n        path: 'logout',\n        redirectTo: 'login',\n        pathMatch: 'full'\n      },\n      {\n        path: '*',\n        component: MainpageComponent,\n        canActivate: [AuthGuard]\n      },\n\n\n    ],{ enableTracing: true })\n  ],\n  providers: [UserService, SortService, FeedService, AuthGuard, Title],\n  bootstrap: [AppComponent]\n\n})\nexport class AppModule {\n  constructor(title : Title) {\n    title.setTitle(\"CoLAB - share your thoughts and ideas!\");\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/app.module.ts","import { Injectable, OnInit }       from '@angular/core';\r\nimport {\r\n  CanActivate, Router,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot\r\n}                           from '@angular/router';\r\nimport { UserService } from './user.service';\r\nimport { Http }  from '@angular/http';\r\nimport {Observable} from \"rxjs/Observable\";\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, OnInit\r\n{\r\n\r\n  constructor(private router: Router, private userService : UserService, private http: Http) {}\r\n\r\n  ngOnInit() : void {\r\n\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n\r\n\r\n    console.log(\"auth guard deciding activation status\");\r\n\r\n    console.log(\"User service on init\");\r\n    return this.http.get('http://localhost:8080/Webtech2Project/rest/login/getPrincipal').map(res =>  {\r\n\r\n      console.log(\"user service on init called getPrincipal\");\r\n      if(res.status == 200) {\r\n        console.log(\"principal set, so should be logged in\");\r\n        this.userService.setToTrue()\r\n\r\n        this.http.get('http://localhost:8080/Webtech2Project/rest/userservice/find_mail/'+res.json().user).subscribe( data => {\r\n          this.userService.setUser(data.json().user);\r\n\r\n          console.log(\" Get User by Principal\");\r\n          this.userService.callUpdate();\r\n\r\n        });\r\n        console.log(\"TRUUUUUUUUUE\");\r\n        return true;\r\n      }\r\n\r\n      else {\r\n        console.log(\"user service oninit principal was empty / 204 status code, so not logged in\");\r\n        this.userService.setToFalse();\r\n        this.router.navigate(['/login']);\r\n\r\n        console.log(\"faaaaalse\");\r\n        return false;\r\n      }\r\n\r\n    });\r\n\r\n\r\n  /*  if(this.userService.isLoggedIn) {\r\n      console.log(\"auth guard : user IS logged in \");\r\n      return true;\r\n    }\r\n    console.log(\"User is NOT logged in!\");\r\n    this.router.navigate(['/login']);\r\n    return false;  */\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/auth-guard.service.ts","import {Component, Input, OnInit, ViewChild, Output, EventEmitter, AfterViewInit, OnChanges} from '@angular/core';\r\nimport { Post } from './post';\r\nimport { PostService } from './postit.service';\r\nimport {PostComponent} from \"./postit.component\";\r\nimport {SortService} from \"./sort.service\";\r\nimport {FeedService} from \"./feed.service\";\r\n\r\n@Component\r\n({ selector: 'choice',\r\n  template: `    \r\n    \r\n    <div *ngIf=\"isNewPost === true\">\r\n        <div *ngIf=\"type == 0\">\r\n            <button (click)=\"writeText($event)\">\r\n                Write a text  \r\n            </button>\r\n          <button (click)=\"uploadImage($event)\">\r\n            Or upload an image!\r\n          </button>\r\n          \r\n        </div>\r\n        \r\n        <div *ngIf=\"type == 1\">\r\n          <form (ngSubmit)=\"sendWithText()\" (click)=\"testLog()\">\r\n          <textarea [(ngModel)]=\"tempNewPost.title\" name=\"why\" class=\"materialize-textarea\" placeholder=\"Give your post a title!\"></textarea>\r\n          <textarea [(ngModel)]=\"tempNewPost.contentText\" name=\"why2\" class=\"materialize-textarea\" placeholder=\"Give your post some content!\"></textarea>\r\n          <input type=\"submit\" class=\"btn\" value=\"Post\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Go back\" (click)=\"goBack($event)\">\r\n    \r\n          </form>\r\n        </div>\r\n        <div *ngIf=\"type == 2\">\r\n          <form (ngSubmit)=\"sendWithImage()\"> \r\n          <textarea [(ngModel)]=\"tempNewPost.title\" name=\"why\" class=\"materialize-textarea\" placeholder=\"Give your post a title!\"></textarea>\r\n            <div class=\"blub\"><input type=\"file\" #imgUpload accept=\"image/*\"></div>\r\n          \r\n          <input type=\"submit\" class=\"btn\" value=\"Post\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Go back\" (click)=\"goBack($event)\">\r\n          </form>\r\n        </div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"isNewPost === false\">\r\n      <div *ngIf=\"type == 1\">\r\n      <div class=\"lel\">\r\n        <button  class=\"advancedbtn\" (click)=\"editModeText($event)\">\r\n          Edit text\r\n        </button>\r\n        <button class=\"advancedbtn\" (click)=\"editModeImage($event)\">\r\n          Upload image instead\r\n        </button>\r\n        <button class=\"advancedbtn\" (click)=\"cancel($event)\"> Cancel edit\r\n        </button>\r\n      </div>\r\n      </div>\r\n        \r\n        \r\n      <div *ngIf=\"type == 2\">\r\n        <div class=\"lel\">\r\n        <button (click)=\"editModeImage($event)\">\r\n          New image\r\n        </button>\r\n        <button (click)=\"editModeText($event)\">\r\n          Write a text instead\r\n        </button>\r\n        <button (click)=\"cancel($event)\"> Cancel edit\r\n        </button>\r\n      </div>\r\n      </div>\r\n      \r\n      <div *ngIf=\"type == 3\">\r\n        <form (ngSubmit)=\"updateText()\">\r\n          <textarea [(ngModel)]=\"tempNewPost.title\" name=\"why\" class=\"materialize-textarea\"></textarea>\r\n          <textarea [(ngModel)]=\"tempNewPost.contentText\" name=\"why2\" class=\"materialize-textarea\" ></textarea>\r\n          <input type=\"submit\" class=\"btn\" value=\"Post\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Go back\" (click)=\"goBack_2($event)\">\r\n        </form>        \r\n      </div>\r\n\r\n      <div *ngIf=\"type == 4\">\r\n        <form (ngSubmit)=\"updateImage()\" enctype=\"multipart/form-data\">\r\n          <textarea [(ngModel)]=\"tempNewPost.title\" name=\"why\" class=\"materialize-textarea\"></textarea>\r\n          <br> Upload your new image! <br> <br>\r\n          <input type=\"file\" #imgUpload2 accept=\"image/*\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Post\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Go back\" (click)=\"goBack_2($event)\">\r\n        </form>\r\n      </div>\r\n      \r\n      <div *ngIf=\"type == 5\">\r\n        <div class=\"lel\">\r\n        <button class=\"advancedbtn\" (click)=\"replyText($event)\">\r\n          Reply with text\r\n        </button>\r\n        <button class=\"advancedbtn\" (click)=\"replyImage($event)\">\r\n          Reply with image\r\n        </button>\r\n        <button class=\"advancedbtn\" (click)=\"cancelReply($event)\"> Cancel edit\r\n        </button>        \r\n      </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"type == 6\">\r\n        <form (ngSubmit)=\"postReplyText()\">\r\n          <textarea [(ngModel)]=\"tempNewPost.title\" name=\"why\" class=\"materialize-textarea\"></textarea>\r\n          <textarea [(ngModel)]=\"tempNewPost.contentText\" name=\"why2\" class=\"materialize-textarea\" ></textarea>\r\n          <input type=\"submit\" class=\"btn\" value=\"Post\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Go back\" (click)=\"goBack_2($event)\">\r\n        </form>\r\n      </div>\r\n\r\n      <div *ngIf=\"type == 7\">\r\n        <form (ngSubmit)=\"postReplyImage()\">\r\n          <textarea [(ngModel)]=\"tempNewPost.title\" name=\"why\" class=\"materialize-textarea\"></textarea>\r\n          <br> Upload your image! <br> <br>\r\n          <input type=\"file\" #imgUpload3 accept=\"image/*\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Post\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Go back\" (click)=\"goBack_2($event)\">\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n    \r\n  `,\r\n  providers: [PostService],\r\n  styleUrls:['choicestyle.css']\r\n})\r\n\r\nexport class ChoiceComponent implements OnInit {\r\n  @ViewChild('imgUpload') imgUp;\r\n  @ViewChild('imgUpload2') imgUp2;\r\n  @ViewChild('imgUpload3') imgUp3;\r\n  @Output() onFinished = new EventEmitter<boolean>();\r\n  @Output() editMode = new EventEmitter<boolean>();\r\n  @Output() endReply = new EventEmitter<boolean>();\r\n  @Input() isNewPost: boolean;\r\n  @Input() selPost: Post;\r\n  @Input() topLevelPost: Post;\r\n\r\n  // 0 = NOT DECIDED YET\r\n  // 1 = TITLE & TEXT\r\n  // 2 = TITLE & IMAGE\r\n  // 3 = Edit Reply Text\r\n  // 4 = Edit Reply Image\r\n  // 5 = New Answer\r\n  // 6 = Reply Text\r\n  // 7 = Reply IMage\r\n  type: number = 0;\r\n  tempNewPost: Post;\r\n\r\n\r\n  test(ev: any) {\r\n    console.log(\"Edite clicked\");\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.calculateType();\r\n    this.tempNewPost = Object.assign({}, this.selPost);\r\n  }\r\n\r\n  constructor(private postService: PostService, private sortService : SortService, private feedService : FeedService) {\r\n\r\n  }\r\n\r\n  //  https://plnkr.co/edit/eB1CiS87hSmxEnDKZMwv?p=preview\r\n  // Mozilla API zu FormData\r\n  // Alle ELemente (ist hier nur 1)  aus FileList in FormData packen, die dann posten für image\r\n\r\n  // TODO Popup falls was schiefgeht bzw handleError mit Popup einbauen\r\n  // Create Post Text\r\n  sendWithText(): void {\r\n    if(this.tempNewPost.title == null || this.tempNewPost.title.replace(/\\s/g, '').length == 0) {\r\n      return;\r\n    }\r\n    if(this.tempNewPost.contentText == null || this.tempNewPost.contentText.replace(/\\s/g, '').length == 0) {\r\n      return;\r\n    }\r\n\r\n    let res: any;\r\n    res = this.postService.createPostText(this.tempNewPost).subscribe(data => {\r\n      this.reset();\r\n      this.addAffected(data);\r\n    }, error => this.handleError());\r\n  }\r\n\r\n  // TODO: Use AddAffected!\r\n  sendWithImage() {\r\n    const files: FileList = this.imgUp.nativeElement.files;\r\n\r\n    if (files.length === 0) {\r\n      console.log(\"RETURNED SINCE EMPTYX\");\r\n      return;\r\n    };\r\n\r\n    if(this.tempNewPost.title == null || this.tempNewPost.title.replace(/\\s/g, '').length == 0) {\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", files[0]);\r\n    console.log(files);\r\n\r\n    this.postService.uploadImage(formData).subscribe(data => this.sendCreation(data), error => this.handleError());\r\n\r\n  }\r\n\r\n  sendCreation(data : any) : void {\r\n    this.postService.createPostImage(data, this.tempNewPost.title).subscribe(res => {this.reset(); this.addAffected(res); }, error => this.handleError())\r\n  }\r\n\r\n  editModeText(ev: any) {\r\n    this.type = 3;\r\n    this.editMode.emit(true);\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  replyText(ev: any) {\r\n    this.type = 6;\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  replyImage(ev: any) {\r\n    this.type = 7;\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  cancelReply(): void {\r\n    this.endReply.emit(true);\r\n  }\r\n\r\n  testLog() {\r\n    console.log(\"Click inside form registered\");\r\n  }\r\n\r\n  editModeImage(ev: any) {\r\n    this.type = 4;\r\n    this.editMode.emit(true);\r\n    ev.stopPropagation();\r\n  }\r\n\r\n\r\n  // Update Post / reply Text\r\n  updateText() {\r\n\t  // is post\r\n\r\n    if(this.tempNewPost.title == null || this.tempNewPost.title.replace(/\\s/g, '').length == 0) {\r\n      return;\r\n    }\r\n    if(this.tempNewPost.contentText == null || this.tempNewPost.contentText.replace(/\\s/g, '').length == 0) {\r\n      return;\r\n    }\r\n\r\n\tif(this.selPost.isPost == 0) {\r\n\t\tthis.postService.updatePostText(this.selPost.id, this.tempNewPost).subscribe(data => this.updateAffected(data));\r\n\t}\r\n\telse {\r\n\t\tthis.postService.updatePostText(this.selPost.id, this.tempNewPost).subscribe(data => this.updateAffectedReply(data));\r\n\t}\r\n\r\n    this.reset();\r\n    this.cancel(new Event(\"egal\"));\r\n  }\r\n\r\n  updateImage() {\r\n    const files: FileList = this.imgUp2.nativeElement.files;\r\n\r\n    if (files.length === 0 || files.length != 1) {\r\n      console.log(\"RETURNED SINCE EMPTYX or TOO LARGE\");\r\n      return;\r\n    };\r\n\r\n    if(this.tempNewPost.title == null || this.tempNewPost.title.replace(/\\s/g, '').length == 0) {\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    formData.append(\"image\", files[0]);\r\n    console.log(files);\r\n\r\n\r\n    this.postService.uploadImage(formData).subscribe(data => this.sendUpdate(data), error => this.handleError());\r\n\r\n    this.cancel(new Event(\"egal\"));\r\n  }\r\n\r\n  sendUpdate(data: any) : void {\r\n    if(this.selPost.isPost == 0) {\r\n      this.postService.updatePostImage(data, this.tempNewPost.title, this.selPost.id).subscribe(data => this.updateAffected(data));\r\n      console.log(\"pls compare : \" +this.selPost.title + \" to  \" + this.tempNewPost.title);\r\n    }\r\n    else {\r\n      this.postService.updatePostImage(data, this.tempNewPost.title, this.selPost.id).subscribe(data => this.updateAffectedReply(data));\r\n    }\r\n\r\n    this.reset();\r\n  }\r\n\r\n  addAffected(data: any) {\r\n    let temp : Post = data.json().postit as Post;\r\n    let order = this.sortService.getSortOrder();\r\n\r\n      if (data.status == 201) {\r\n        this.feedService.increment();\r\n        if(temp.isPost == 1) {\r\n          this.feedService.incrementReplies(this.topLevelPost);\r\n          console.log(\"is reply, so sort order can only be -1\");\r\n          // this.rp.push(temp);\r\n          this.feedService.movePostedReply();\r\n          this.feedService.repliesPush(temp);\r\n          this.feedService.callUpdateReply();\r\n        }\r\n        else {\r\n          if (order == 0) {\r\n            console.log(\"SortOrder 0 --> must have been newest\");\r\n           // this.fp.unshift(temp);\r\n            this.feedService.feedUnshift(temp);\r\n            this.feedService.callUpdateFeed();\r\n          }\r\n\r\n          if (order == 1) {\r\n            console.log(\"SortOrder 1 --> must have been oldest\");\r\n            // this.fp.push(temp);\r\n            this.feedService.feedPush(temp);\r\n            this.feedService.callUpdateFeed();\r\n          }\r\n          if (order == 2 ) {\r\n            this.feedService.feedPush(temp);\r\n            this.feedService.callUpdateFeed();\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        console.log(\"http response statust was not 201. there must have been an error!\");\r\n      }\r\n  }\r\n\r\n  updateAffected(data: any) {\r\n    if(data.status == 200) {\r\n      let temp = data.json().postit as Post;\r\n      this.feedService.updatePost(this.selPost, temp);\r\n      this.type = 100;\r\n    } else {\r\n      this.handleError();\r\n    }\r\n  }\r\n\r\n  updateAffectedReply (data : any) {\r\n    if(data.status == 200) {\r\n      let temp = data.json().postit as Post;\r\n      this.feedService.updateReply(this.selPost, temp);\r\n      this.type = 100;\r\n    }\r\n    else {\r\n      this.handleError();\r\n    }\r\n  }\r\n\r\n  handleError() {\r\n  }\r\n\r\n  reset() {\r\n    console.log(\"reset called\");\r\n    this.type = 0;\r\n    this.tempNewPost = Object.assign({}, this.selPost);\r\n    this.editMode.emit(false);\r\n    this.emit();\r\n  }\r\n\r\n  postReplyText()  {\r\n    if(this.tempNewPost.title == null || this.tempNewPost.title.replace(/\\s/g, '').length == 0) {\r\n      return;\r\n    }\r\n\r\n    if(this.tempNewPost.contentText == null || this.tempNewPost.contentText.replace(/\\s/g, '').length == 0) {\r\n      return;\r\n    }\r\n    this.postService.createReplyText(this.tempNewPost, this.topLevelPost).subscribe(data => { this.addAffected(data) });\r\n    this.reset();\r\n  }\r\n\r\n  postReplyImage() {\r\n\r\n    if(this.tempNewPost.title == null || this.tempNewPost.title.replace(/\\s/g, '').length == 0) {\r\n      return;\r\n    }\r\n    const files: FileList = this.imgUp3.nativeElement.files;\r\n\r\n    if (files.length === 0) {\r\n      console.log(\"RETURNED SINCE EMPTYX\");\r\n      return;\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", files[0]);\r\n    console.log(files);\r\n\r\n\r\n    this.postService.uploadImage(formData).subscribe(data => this.sendReply(data), error => this.handleError());\r\n\r\n\r\n    this.cancel(new Event(\"egal\"));\r\n  }\r\n\r\n  sendReply(data : any) : void {\r\n    // vo updateAffectedReply geöndert\r\n    this.postService.createReplyImage(this.tempNewPost, this.topLevelPost, data).subscribe(res => { this.reset(); this.addAffected(res); });\r\n  }\r\n\r\n  goBack(ev: any) {\r\n    this.reset();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  goBack_2(ev:any) {\r\n      this.calculateType();\r\n    this.tempNewPost = Object.assign({}, this.selPost);\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  cancel(ev: any) : void {\r\n    this.type = 0;\r\n    this.editMode.emit(false);\r\n    this.selPost.isBeingEdited = false;\r\n    this.selPost.isTypingReply = false;\r\n    console.log(\"Cancel edit; Edit property of \" + this.selPost.title + \" is now set to \" + this.selPost.isBeingEdited);\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  writeText(ev: any) {\r\n    this.editMode.emit(true);\r\n    this.type = 1;\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  uploadImage(ev: any) {\r\n    this.editMode.emit(true);\r\n    this.type = 2;\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  emit() : void {\r\n    this.onFinished.emit(true);\r\n  }\r\n\r\n  calculateType()  {\r\n    if(this.isNewPost) {\r\n      this.type = 0;\r\n    }\r\n    // Not a new post --> edit mode\r\n    else {\r\n      // check if post was passed\r\n      if(this.selPost === null) {\r\n        this.handleError();\r\n      }else {\r\n        if(this.selPost.isTypingReply == true) {\r\n          this.type = 5;\r\n        } else {\r\n            // Post was passed --> check if post contained image or not\r\n            if(this.selPost.contentImage === null) {\r\n              this.type = 1;\r\n            }\r\n            else {\r\n\r\n              this.type = 2;\r\n            }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/choice.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"button {\\r\\n  font-family: \\\"Roboto\\\", sans-serif;\\r\\n  outline: 0;\\r\\n  background-color: white;\\r\\n  border: 1px solid #061651;\\r\\n  width: 20%;\\r\\n  padding: 15px;\\r\\n  margin-left: 20%;\\r\\n  color: black;\\r\\n  font-size: 14px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n\\r\\n.blub {\\r\\n  margin-bottom: 25px;\\r\\n}\\r\\n\\r\\n\\r\\n.advancedbtn {\\r\\n  margin-left: 10%;\\r\\n}\\r\\n\\r\\n.lel {\\r\\n  margin-top: 2%;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/choicestyle.css\n// module id = ../../../../../src/app/choicestyle.css\n// module chunks = 1","module.exports = __webpack_public_path__ + \"colabbg2.4d5b1306270d2d91a0e5.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/colabbg2.jpg\n// module id = ../../../../../src/app/colabbg2.jpg\n// module chunks = 1","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Post } from './post'\r\nimport {isNullOrUndefined} from \"util\";\r\n\r\n@Component\r\n({ selector: 'edit',\r\n  template: `\r\n   <div *ngIf=\"type == 1\">\r\n     <div>\r\n       Edit text\r\n     </div>\r\n     <div>\r\n       Replace your text with an image!\r\n     </div>\r\n     <div> Cancel edit\r\n     </div>\r\n   </div>\r\n   \r\n   <div *ngIf=\"type == 2\">\r\n      <div>\r\n        Choose a different image to upload\r\n      </div>\r\n      <div>\r\n        Replace your image with a text\r\n      </div>\r\n      <div> Cancel edit\r\n      </div>\r\n   </div> \r\n \t\r\n  `\r\n})\r\n\r\nexport class EditComponent implements OnInit {\r\n  @Input() selPost : Post;\r\n\r\n  // Content of choice component depends on the current content of the post\r\n  // 1 = TEXT\r\n  // 2 = IMAGE\r\n  type : number;\r\n  tempNewPost : Post = new Post();\r\n\r\n  ngOnInit() : void {\r\n    if (this.selPost.contentImage === null) {\r\n      this.type = 1;\r\n      console.log(\"ContentIMG undefined, should be text\");\r\n    }\r\n    else {\r\n      this.type = 2;\r\n      console.log(\"ContentImg defined, shold be IMG\");\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/edit.component.ts","import { Injectable, OnInit} from '@angular/core';\r\nimport { Post } from './post';\r\nimport { SortService } from './sort.service';\r\nimport { Subject }    from 'rxjs/Subject';\r\nimport {UserService} from \"./user.service\";\r\nimport {PostService} from \"./postit.service\";\r\n\r\n@Injectable()\r\nexport class FeedService implements OnInit{\r\n\r\n  feedPosts : Post[] = [];\r\n  repliesForCurrent : Post[] = [];\r\n  needToUpdateFeed : Subject<boolean> = new Subject<boolean>();\r\n  needToUpdateReply : Subject<boolean> = new Subject<boolean>();\r\n\r\n  providers: [PostService];\r\n\r\n  constructor(private sortService : SortService, private userService : UserService)\r\n  {\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    this.feedPosts = [];\r\n    this.repliesForCurrent = [];\r\n  }\r\n\r\n  initFeed() : void {\r\n    for (let elem of this.feedPosts) {\r\n      elem.repliesVisible = false;\r\n      elem.isBeingEdited = false;\r\n      elem.isTypingReply = false;\r\n      console.log(\"isTypingReply = false [35]\");\r\n    }\r\n  }\r\n\r\n    initReplies() : void {\r\n      for(let elem of this.repliesForCurrent) {\r\n      elem.repliesVisible = false;\r\n      elem.isBeingEdited = false;\r\n      elem.isTypingReply = false;\r\n        console.log(\"isTypingReply = false [43]\");\r\n    }\r\n  }\r\n\r\n  deleteFromFeed(p : Post) : void {\r\n    let ind = this.feedPosts.indexOf(p);\r\n    this.feedPosts.splice(ind, 1);\r\n  }\r\n\r\n  deleteFromReplies(p:Post) : void {\r\n    let ind = this.repliesForCurrent.indexOf(p);\r\n    this.repliesForCurrent.splice(ind, 1);\r\n  }\r\n\r\n  feedUnshift(p : Post) : void {\r\n    let order = this.sortService.getSortOrder();\r\n    this.feedPosts.unshift(p);\r\n    this.feedPosts[0].repliesVisible = false;\r\n    this.feedPosts[0].isBeingEdited = false;\r\n    this.feedPosts[0].isTypingReply = false;\r\n    console.log(\"isTypingReply = false [63]\");\r\n  }\r\n\r\n  feedPush(p : Post) : number {\r\n    let order = this.sortService.getSortOrder();\r\n    let n = this.feedPosts.push(p);\r\n    this.feedPosts[n-1].repliesVisible = false;\r\n    this.feedPosts[n-1].isBeingEdited = false;\r\n    this.feedPosts[n-1].isTypingReply = false;\r\n    console.log(\"isTypingReply = false [70]\");\r\n    return n;\r\n  }\r\n\r\n  repliesUnshift(p : Post) : void {\r\n    this.repliesForCurrent.unshift(p);\r\n    this.repliesForCurrent[0].isBeingEdited = false;\r\n    this.repliesForCurrent[0].postit_replies = 0;\r\n    let usr = this.userService.getGlobalUser();\r\n    console.log(\"wockbocklock\");\r\n    this.repliesForCurrent[0].author_name = usr.name;\r\n    this.repliesForCurrent[0].author_surname = usr.surname;\r\n    this.repliesForCurrent[0].avatar_path = usr.avatar;\r\n  }\r\n\r\n  repliesShift() : void {\r\n    this.repliesForCurrent.shift();\r\n  }\r\n\r\n  repliesPush(p : Post) : number {\r\n    let n = this.repliesForCurrent.push(p);\r\n    this.repliesForCurrent[n-1].isBeingEdited = false;\r\n    this.repliesForCurrent[n-1].isTypingReply = false;\r\n    this.repliesForCurrent[n-1].repliesVisible = false;\r\n    console.log(\"rep : \" + this.repliesForCurrent[n-1].contentText);\r\n    return n;\r\n  }\r\n\r\n  movePostedReply() : void {\r\n    let a = this.repliesForCurrent.shift();\r\n\tconsole.log(\"replies size is now 1 less, it is \" + this.repliesForCurrent.length);\r\n   // this.repliesPush(a);\r\n  }\r\n\r\n  getFeedPost() : Post[] {\r\n    return this.feedPosts;\r\n  }\r\n\r\n  getRepliesForCurrent() : Post [] {\r\n    return this.repliesForCurrent;\r\n  }\r\n\r\n  spliceFeed( a : number, b : number) {\r\n    this.feedPosts.splice(a,b);\r\n  }\r\n\r\n  spliceReplies( a : number, b : number) {\r\n    this.repliesForCurrent.splice(a,b);\r\n  }\r\n\r\n  resetReplies() : void {\r\nconsole.log(\"~~~~ Replies for current with experimental splice called\");\r\n    this.repliesForCurrent.splice(0, this.repliesForCurrent.length);\r\n   // this.repliesForCurrent = [];\r\n  }\r\n\r\n  resetFeed() : void {\r\n    console.log(\"Reset feed by splice: \" + this.feedPosts.length);\r\n    this.feedPosts.splice(0, this.feedPosts.length);\r\n    console.log(\"AFTER Reset feed by splice: \" + this.feedPosts.length);\r\n  }\r\n\r\n  printInternalFeed() : void {\r\n\t  console.log(\"compare to internal feed in FPS:\");\r\n\r\n\t  for(let elem of this.feedPosts) {\r\n\t\t  console.log(\"~~~~~~~~~~~~~~~~~~~~~ \" + elem.id);\r\n\t  }\r\n  }\r\n\r\n  setIsTyping() : void {\r\n    this.repliesForCurrent[0].isTypingReply = true;\r\n    this.repliesForCurrent[0].id = this.userService.getGlobalUser().id;\r\n    console.log(\"isTypingReply = true\");\r\n  }\r\n\r\n  pushFeedFromSort(p : Post[]) : void {\r\n    this.resetFeed();\r\n    for (let elem of p)\r\n    {\r\n      if(elem.isPost == 0) {\r\n        let n = this.feedPosts.push(elem);\r\n        this.feedPosts[n-1].repliesVisible = false;\r\n        this.feedPosts[n-1].isBeingEdited = false;\r\n        this.feedPosts[n-1].isTypingReply = false;\r\n        console.log(\"isTypingReply = false [134]\");\r\n      }\r\n    }\r\n  this.needToUpdateFeed.next(true);\r\n  }\r\n\r\n  callUpdateFeed() : void {\r\n    this.needToUpdateFeed.next(true);\r\n  }\r\n\r\n  callUpdateReply() : void {\r\n    this.needToUpdateReply.next(true);\r\n  }\r\n\r\n  updatePost(p: Post, data : any) {\r\n    let ind = this.feedPosts.indexOf(p,0);\r\n\tconsole.log(\"update from \" + this.feedPosts[ind].title );\r\n    this.feedPosts[ind] = Object.assign({}, data);\r\n    this.feedPosts[ind].isBeingEdited = false;\r\n    this.feedPosts[ind].isTypingReply = false;\r\n\tconsole.log(\"to \" + this.feedPosts[ind].title);\r\n    this.needToUpdateFeed.next(true);\r\n  }\r\n\r\n  updateReply(p: Post, data : any) {\r\n\t  console.log(\"passed post in upd.reply: \" + p.title );\r\n  let ind = this.repliesForCurrent.indexOf(p,0);\r\n  this.repliesForCurrent[ind] = Object.assign({}, data);\r\n  this.repliesForCurrent[ind].isBeingEdited = false;\r\n  this.repliesForCurrent[ind].isTypingReply = false;\r\n  this.needToUpdateReply.next(true);\r\n  }\r\n\r\n  decrement() : void {\r\n    this.userService.decrement();\r\n\r\n  }\r\n\r\n  increment() : void {\r\n    this.userService.increment();\r\n\r\n  }\r\n\r\n  incrementReplies(tlp : Post) : void {\r\n    tlp.postit_replies = tlp.postit_replies +1;\r\n  }\r\n\r\n  decrementReplies(tlp : Post) : void {\r\n    tlp.postit_replies = tlp.postit_replies -1;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/feed.service.ts","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Post } from './post';\r\nimport { PostService } from './postit.service';\r\nimport {SortService} from \"./sort.service\";\r\nimport { Headers, Http, RequestOptions } from '@angular/http';\r\nimport {FeedService} from \"./feed.service\";\r\nimport { User } from './user';\r\nimport {UserService} from \"./user.service\";\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Component ({\r\n  selector: 'login',\r\n  template: `    \r\n    \r\n    <div class=\"bg\">\r\n    <div *ngIf=\"type == 0\">\r\n      <div class=\"login-page\">\r\n        <div class=\"form\">          \r\n          <form class=\"login-form\">\r\n            <input [(ngModel)]=\"tempUser.email\" name=\"whytho\" type=\"text\" placeholder=\"email\"/>\r\n            <input [(ngModel)]=\"tempUser.password\" name=\"whytho2\" type=\"password\" placeholder=\"password\"/>\r\n            <button (click)=\"tryLogin()\">login</button>\r\n            <p (click)=\"signup()\" class=\"message\">Don't have an account yet? Click here to create one!</p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n    \r\n <div *ngIf=\"type == 1\">\r\n   <div class=\"login-page\">\r\n     <div class=\"form\">\r\n      <div class=\"space\"> Please note: All fields are mandatory upon registering but can be updated individually later on.</div>\r\n       <form class=\"login-form\">\r\n         <input type=\"text\" [(ngModel)]=\"tempUser.email\" name=\"whytho\" placeholder=\"email\">\r\n         <input type=\"password\" [(ngModel)]=\"tempUser.password\" name=\"whytho2\" placeholder=\"password\">\r\n         <input type=\"password\" [(ngModel)]=\"checkpw\" name=\"whytho25\" placeholder=\"enter password again\">\r\n         <input type=\"date\" [(ngModel)]=\"tempUser.birthDate\" name=\"whytho3\" placeholder=\"birth date (YYYY-MM-DD)\">\r\n         <input type=\"text\" [(ngModel)]=\"tempUser.name\" name=\"whytho4\" placeholder=\"first name\">\r\n         <input type=\"text\" [(ngModel)]=\"tempUser.surname\" name=\"whytho5\" placeholder=\"last name\">\r\n         <input type=\"text\" [(ngModel)]=\"tempUser.location\" name=\"whytho6\" placeholder=\"location inside the company\">\r\n         <input type=\"text\" [(ngModel)]=\"tempUser.phone\" name=\"whytho7\" placeholder=\"your phone\">\r\n         <input type=\"text\" [(ngModel)]=\"tempUser.fax\" name=\"whytho8\" placeholder=\"your fax\">\r\n         <input type=\"text\" [(ngModel)]=\"tempUser.gender\" name=\"whytho9\" placeholder=\"your gender\">\r\n         <button (click)=\"tryRegister()\">create</button>\r\n         <p (click)=\"goBack()\" class=\"message\">Already registered? Go back!</p>\r\n       </form>\r\n     </div>\r\n   </div>  \r\n   \r\n </div>\r\n    </div>\r\n    \r\n <!--   <div *ngIf=\"type == 0\">\r\n\r\n      <form>\r\n\r\n        <input type=\"text\" [(ngModel)]=\"tempUser.email\" name=\"whytho\" placeholder=\"E-Mail\">\r\n        <input type=\"password\" [(ngModel)]=\"tempUser.password\" name=\"whytho2\" placeholder=\"password\">\r\n        <input type=\"submit\" value=\"Login\" (click)=\"tryLogin()\">\r\n      </form>\r\n\r\n      Dont have an account yet? Click <span (click)=\"signup()\">here</span> to crete one!\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"type == 1 \">\r\n      Register now!\r\n      <br>\r\n      Simply fill out the fields below and you are ready to go!\r\n      <br>\r\n      <form>\r\n\r\n        <input type=\"text\" [(ngModel)]=\"tempUser.email\" name=\"whytho\" placeholder=\"E-Mail\">\r\n        <input type=\"password\" [(ngModel)]=\"tempUser.password\" name=\"whytho2\" placeholder=\"password\">\r\n        <input type=\"password\" [(ngModel)]=\"checkpw\" name=\"whytho25\" placeholder=\"enter password again\">\r\n        <input type=\"date\" [(ngModel)]=\"tempUser.birth_date\" name=\"whytho3\" placeholder=\"Birth date (YYYY-MM-DD)\">\r\n        <input type=\"text\" [(ngModel)]=\"tempUser.name\" name=\"whytho4\" placeholder=\"first name\">\r\n        <input type=\"text\" [(ngModel)]=\"tempUser.surname\" name=\"whytho5\" placeholder=\"last name\">\r\n        <input type=\"text\" [(ngModel)]=\"tempUser.location\" name=\"whytho6\" placeholder=\"Your location inside the company\">\r\n        <input type=\"text\" [(ngModel)]=\"tempUser.phone\" name=\"whytho7\" placeholder=\"your phone\">\r\n        <input type=\"text\" [(ngModel)]=\"tempUser.fax\" name=\"whytho8\" placeholder=\"your fax\">\r\n        <input type=\"text\" [(ngModel)]=\"tempUser.gender\" name=\"whytho9\" placeholder=\"your gender\">\r\n\r\n\r\n        <input type=\"submit\" value=\"Register\" (click)=\"tryRegister()\">\r\n      </form>\r\n\r\n      <span (click)=\"goBack()\">Go back</span>\r\n    </div> -->\r\n  `,\r\n  providers: [],\r\n  styleUrls: ['loginstyle.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit\r\n{\r\n  tempUser : User;\r\n  type : number = 0;\r\n  tempDate : any;\r\n  private checkpw : string = '';\r\n\r\n\r\n  constructor(private http: Http, private userService : UserService,private router: Router) {\r\n    //this.tempUser = new User();\r\n  }\r\n\r\n  ngOnInit() : void {\r\n    console.log(\"login component init\");\r\n    this.tempUser = this.userService.getGlobalUser();\r\n  }\r\n\r\n  tryLogin() : void {\r\n    let body = ' {\"user\":{\"id\":-1,\"avatar\":\"/colab/resources/avatar/default.jpg\",\"birthDate\": 0 ,\"email\":\"' + this.tempUser.email + '\",\"fax\":\"\",\"gender\":\"\",\"location\":\"\",\"name\":\"\",\"password\":\"' + this.tempUser.password + '\",\"phone\":\"\",\"registerDate\":0,\"surname\":\"\",\"postits\":[],\"position\":3}}';\r\n\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n      this.http.post('http://localhost:8080/Webtech2Project/rest/login/json', body, options).subscribe(\r\n        data => this.check(data)\r\n      );\r\n  }\r\n\r\n  setTo1(): void {\r\n    this.type = 1;\r\n  }\r\n\r\n  setTo0(): void {\r\n    this.type = 0;\r\n  }\r\n\r\n  check(data : any) : void {\r\n\r\n    // alles ok\r\n    if(data.status == 200) {\r\n      // find user by email and setGlobalUser & isLoggedIn\r\n\r\n      this.http.get('http://localhost:8080/Webtech2Project/rest/userservice/find_mail/'+this.tempUser.email).subscribe( res => this.set(res));\r\n\r\n    }\r\n    else {\r\n      console.log(\"User nicht bekannt\");\r\n    }\r\n  }\r\n\r\n  set(data : any) : void {\r\n    // alles ok\r\n    if(data.status == 200) {\r\n      let usr = data.json().user;\r\n      this.userService.setUser(usr);\r\n      this.router.navigate(['/']);\r\n      this.tempUser = this.userService.getGlobalUser();\r\n    }\r\n    else {\r\n      console.log(\"error while trying to fetch user\");\r\n    }\r\n  }\r\n\r\n  signup() : void {\r\n    this.type = 1;\r\n    this.tempUser = new User();\r\n\r\n  }\r\n\r\n  goBack() : void {\r\n    this.type = 0;\r\n    this.tempUser = new User();\r\n  }\r\n\r\n  tryRegister() : void {\r\n\r\n    console.log(\"TRY REGISTER CALLED\");\r\n    if(this.tempUser.name == null || this.tempUser.name.replace(/\\s/g, '').length == 0) {\r\n      console.log(\"[1] ----------------\");\r\n      return;\r\n    }\r\n\r\n    if(this.tempUser.surname == null || this.tempUser.surname.replace(/\\s/g, '').length == 0) {\r\n      console.log(\"[2] ----------------\");\r\n      return;\r\n    }\r\n\r\n    if(this.tempUser.email == null || this.tempUser.email.replace(/\\s/g, '').length ==0) {\r\n      console.log(\"[3] ----------------\");\r\n      return;\r\n    }\r\n\r\n    if(this.tempUser.password == null || this.tempUser.password.replace(/\\s/g, '').length == 0) {\r\n      console.log(\"[4] ----------------\");\r\n      return;\r\n    }\r\n\r\n    if(this.checkpw == null || this.checkpw.replace(/\\s/g, '').length == 0) {\r\n      console.log(\"[5] ----------------\");\r\n      return;\r\n    }\r\n\r\n    if(this.tempUser.birthDate == null ) {\r\n      console.log(\"[6] ----------------\");\r\n      return;\r\n    }\r\n\r\n    if(this.tempUser.location == null || this.tempUser.location.replace(/\\s/g, '').length == 0) {\r\n      console.log(\"[7] ----------------\");\r\n      return;\r\n    }\r\n\r\n    if(this.tempUser.phone == null || this.tempUser.phone.replace(/\\s/g, '').length == 0) {\r\n      console.log(\"[8] ----------------\");\r\n      return;\r\n    }\r\n\r\n    if(this.tempUser.fax == null || this.tempUser.fax.replace(/\\s/g, '').length == 0) {\r\n      console.log(\"[9] ----------------\");\r\n      return;\r\n    }\r\n\r\n    if(this.tempUser.gender == null || this.tempUser.gender.replace(/\\s/g, '').length == 0) {\r\n      console.log(\"[1] ----------------\");\r\n      return;\r\n    }\r\n\r\n\r\n    console.log(\"Birth da ist \" + this.tempUser.birthDate);\r\n\r\n\r\n    if(this.checkpw === this.tempUser.password) {\r\n      console.log(\"try register called and password matches\");\r\n      this.userService.createUser(this.tempUser).subscribe(data => console.log(\"res was \" + data));\r\n      this.type = 0;\r\n      this.tempUser = new User();\r\n      this.checkpw='';\r\n    }\r\n    else {\r\n      console.log(\"passoword doesnt match, try again\");\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/login.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Roboto:300);\", \"\"]);\n\n// module\nexports.push([module.id, \".login-page {\\r\\n  width: 1000px;\\r\\n  padding: 8% 0 0;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.login-page2 {\\r\\n  width: 1000px;\\r\\n  padding: 1% 0 0;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.centerIt {\\r\\n  text-align: center;\\r\\n  margin-bottom: 5px;\\r\\n  padding-top: 10px;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.bg2 {\\r\\n  background-image: url(\" + require(\"./colabbg2.jpg\") + \");\\r\\n  background-size: cover;\\r\\n  height: 100vh;\\r\\n  min-height:100vh;\\r\\n}\\r\\n\\r\\n.form {\\r\\n  position: relative;\\r\\n  z-index: 1;\\r\\n  background: #FFFFFF;\\r\\n  max-width: 360px;\\r\\n  margin: 0 auto 100px;\\r\\n  padding: 45px;\\r\\n  text-align: center;\\r\\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\\r\\n}\\r\\n.form input {\\r\\n  font-family: \\\"Roboto\\\", sans-serif;\\r\\n  outline: 0;\\r\\n  background: #f2f2f2;\\r\\n  width: 100%;\\r\\n  border: 0;\\r\\n  margin: 0 0 15px;\\r\\n  padding: 15px;\\r\\n  box-sizing: border-box;\\r\\n  font-size: 14px;\\r\\n}\\r\\n.form button {\\r\\n  font-family: \\\"Roboto\\\", sans-serif;\\r\\n  text-transform: uppercase;\\r\\n  outline: 0;\\r\\n  background: #061651;\\r\\n  width: 100%;\\r\\n  border: 0;\\r\\n  padding: 15px;\\r\\n  color: #FFFFFF;\\r\\n  font-size: 14px;\\r\\n  transition: all 0.3 ease;\\r\\n  cursor: pointer;\\r\\n}\\r\\n.form button:hover,.form button:active,.form button:focus {\\r\\n  background: #2e48aa;\\r\\n}\\r\\n\\r\\n.space {\\r\\n  padding-bottom: 15px;\\r\\n}\\r\\n.form .message {\\r\\n  margin: 15px 0 0;\\r\\n  color: #b3b3b3;\\r\\n  font-size: 12px;\\r\\n}\\r\\n.form .message a {\\r\\n  color: #4CAF50;\\r\\n  text-decoration: none;\\r\\n}\\r\\n.form .register-form {\\r\\n  display: none;\\r\\n}\\r\\n.container {\\r\\n  position: relative;\\r\\n  z-index: 1;\\r\\n  max-width: 300px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.container:before, .container:after {\\r\\n  content: \\\"\\\";\\r\\n  display: block;\\r\\n  clear: both;\\r\\n}\\r\\n.container .info {\\r\\n  margin: 50px auto;\\r\\n  text-align: center;\\r\\n}\\r\\n.container .info h1 {\\r\\n  margin: 0 0 15px;\\r\\n  padding: 0;\\r\\n  font-size: 36px;\\r\\n  font-weight: 300;\\r\\n  color: #1a1a1a;\\r\\n}\\r\\n.container .info span {\\r\\n  color: #4d4d4d;\\r\\n  font-size: 12px;\\r\\n}\\r\\n.container .info span a {\\r\\n  color: #000000;\\r\\n  text-decoration: none;\\r\\n}\\r\\n.container .info span .fa {\\r\\n  color: #EF3B3A;\\r\\n}\\r\\nbody {\\r\\n  background: #76b852; /* fallback for old browsers */\\r\\n  background: linear-gradient(to left, #76b852, #8DC26F);\\r\\n  font-family: \\\"Roboto\\\", sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/loginstyle.css\n// module id = ../../../../../src/app/loginstyle.css\n// module chunks = 1","import { Component, OnInit} from '@angular/core';\r\nimport { ProfileBadgeData } from './profilebadge';\r\nimport { Post } from './post';\r\n\r\n@Component({\r\n  selector: 'mainpage',\r\n  template: `   <main>\r\n    <div class=\"col_1\">\r\n      <profileBadge>\r\n      </profileBadge>\r\n    </div>\r\n    <div class=\"col_2\">\r\n      <h2>Express yourself with a post!</h2>\r\n      <div class=\"formdiv\">\r\n        <choice [isNewPost]=\"true\">\r\n        </choice>\r\n      </div>\r\n      <h2 class=\"morespace\">See what everyone in your company is up to!</h2>\r\n\r\n      <post></post>\r\n    </div>\r\n\r\n    <div class=\"col_3\">\r\n      <sortby></sortby>\r\n    </div>\r\n  </main>\r\n  `,\r\n\r\n})\r\nexport class MainpageComponent implements OnInit {\r\n  title = 'CoLAB';\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"INIT MAINPAGE\");\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/mainpage.component.ts","import { Component } from '@angular/core';\r\nimport {UserService} from \"./user.service\";\r\n\r\n@Component\r\n({ selector: 'navbar',\r\n   template: `<div class=\"navbar\">\r\n                <nav>\r\n                  <ul class=\"navul\">\r\n                    <li class=\"mmenu colab\" routerLink=\"\" ><span class=\"co\"><i class=\"material-icons\">keyboard_arrow_right</i>Co</span><span class=\"lab\">LAB<i class=\"material-icons\">keyboard_arrow_left</i></span></li>\r\n                     <li class=\"mmenu midmenu\" routerLink=\"/profile\"> <i class=\"material-icons\">account_circle</i><span class=\"atest\">PROFILE</span></li>\r\n                     <li class=\"mmenu midmenu\" routerLink=\"/settings\"><i class=\"material-icons\">build</i><span class=\"atest\">SETTINGS</span></li>                    \r\n                     <li class=\"mmenu midmenu\" routerLink=\"/login\" (click)=\"logUserOut()\"><i class=\"material-icons\">power_settings_new</i><span class=\"atest\">SIGN OUT</span></li>\r\n                     <li class=\"mmenu midmenu searchbar\">\r\n                    </li>\r\n                  </ul>\r\n                </nav>\r\n                </div>\r\n   `\r\n})\r\n\r\nexport class NavbarComponent {\r\n\r\n  constructor(private userService : UserService) {\r\n\r\n  }\r\n\r\n  logUserOut() {\r\n    console.log(\"Log user out called. proceeding\");\r\n    this.userService.logOut().subscribe(data =>  { console.log(\"log out data status was \" + data.status);\r\n        this.userService.setToLoggedOut();\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/nav.component.ts","export class Post {\r\n  id: number;\r\n  answers: number;\r\n  clicks: number;\r\n  contentImage: any;\r\n  contentText: string;\r\n  date: number;\r\n  isPost: number;\r\n  lastModified: number;\r\n  responseTo: number;\r\n  title: string;\r\n  author: number;\r\n  author_name : string;\r\n  author_surname : string;\r\n  avatar_path : string;\r\n  repliesVisible: boolean = false;\r\n  isBeingEdited : boolean = false;\r\n  isTypingReply : boolean;\r\n  postit_replies: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/post.ts","import { Component, Input, OnInit, AfterViewInit, ViewChild, ComponentFactoryResolver, ViewContainerRef} from '@angular/core';\r\nimport { Post } from './post';\r\nimport {Answer} from \"./answer\";\r\nimport { TestComponent } from './test.component';\r\nimport { PostService } from './postit.service';\r\nimport { PostDirective } from './post.directive';\r\nimport { ChoiceComponent }  from './choice.component';\r\nimport {isNullOrUndefined} from \"util\";\r\nimport {UserService} from \"./user.service\";\r\nimport { User } from './user';\r\nimport {FeedService} from \"./feed.service\";\r\nimport { Router } from '@angular/router';\r\n\r\n// IN MODULE AUSLAGERN\r\n\r\n\r\n@Component\r\n({\r\n\r\n  selector: 'post',\r\n  template: `    <!-- TODO Eventuell Style wegen Umrandung und Markierung welcher selected ist anpassen\r\n        Jquery In Angular: https://stackoverflow.com/questions/30623825/how-to-use-jquery-with-angular2\r\n        Scrollen mit Jquery: https://stackoverflow.com/questions/6677035/jquery-scroll-to-element\r\n     -->\r\n \r\n      <div *ngFor=\"let current of feedPosts\" (click)=\"onSelect(current, $event)\" > <!-- [class.selected]=\"current === selectedPost\"-->\r\n      <div class=\"content\" >\r\n    <div class=\"flexcol\">\r\n      <div class=\"flexrow\">\r\n        <div class=\"item stats\">\r\n          <span class=\"markertest\">\r\n            \r\n          </span>\r\n          <img class=\"feedpic\" src=\"http://localhost:8080/{{current.avatar_path}}\" (click)=\"gotoProfile(current)\">\r\n\r\n          <div class=\"text\">\r\n            <ul class=\"ulstat\">\r\n              <li></li>\r\n              <li>by {{current.author_name}} {{current.author_surname}}</li>\r\n              <li>Replies: {{current.postit_replies}}</li>             \r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"item_2 flexcol\">\r\n         <div *ngIf=\"current.isBeingEdited == true\">\r\n           <choice [selPost] = \"selectedPost\" [isNewPost]=\"false\">                 \r\n                </choice>\r\n         </div>\r\n        <div *ngIf=\"current.isBeingEdited == false\"> \r\n          <div *ngIf=\"!current.contentImage\"> \r\n             <div class=\"item\">\r\n                 <h1>{{current.title}}</h1>\r\n             </div>\r\n            <br>\r\n            {{current.contentText}}\r\n          </div>\r\n\r\n          <div *ngIf=\"!current.contentText\">\r\n            <div class=\"item\">\r\n              <h1>{{current.title}}</h1>\r\n            </div>\r\n            <br>\r\n           <img class=\"postimg\" src=\"{{current.contentImage}}\">\r\n          </div>\r\n          <br>\r\n          <span class=\"created\"> Created: {{current.date | date }} \r\n            <span *ngIf=\"current.lastModified == null\"> Last modified: -</span>\r\n            <span *ngIf=\"current.lastModified != null\">Last modified: {{current.lastModified | date}}</span>\r\n             </span>\r\n          </div>          \r\n       </div>\r\n        <div class=\"item_4 symbols\">\r\n         <div *ngIf=\"current?.author == user?.id\">         \r\n            <span class=\"nounder\" (click)=\"editPost(current,$event)\">\r\n              <i class=\"material-icons\">create</i>\r\n            </span>\r\n            <br>\r\n            <br>\r\n        </div>\r\n           <div *ngIf=\"current?.author == user?.id || user?.position == 1 \"> \r\n            <span class=\"nounder\" (click)=\"deletePost(current, $event)\">\r\n              <i class=\"material-icons\">clear</i>\r\n            </span>\r\n            <br>\r\n            <br>            \r\n         </div>\r\n       \r\n          <span class=\"nounder\" (click)=\"reply(current, $event)\">\r\n            <i class=\"material-icons\">reply</i>\r\n          </span>\r\n        </div>\r\n    </div>\r\n  </div>\r\n       <div *ngFor=\"let answers of repliesForCurrent\" (click)=\"onSelectAnswer(current, $event)\">\r\n         <div *ngIf=\"current.repliesVisible\">\r\n           <div class=\"content answer\" style=\"background-color: green;\">\r\n             <div class=\"flexcol\">\r\n               <div class=\"flexrow\" >\r\n                 <div class=\"flexcol\" style=\"flex-basis: 8%\">\r\n                   <div class=\"item stats\">\r\n                     <img src=\"http://localhost:8080/{{answers?.avatar_path}}\" class=\"feedpic\" (click)=\"gotoProfile(answers)\"/>\r\n                     <div class=\"text\">\r\n                       <ul class=\"ulstat\">\r\n                         <li></li>\r\n                         <li>by {{answers?.author_name}} {{answers?.author_surname}}</li>\r\n                       </ul>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n                 <div class=\"item_2 flexcol\">\r\n                   <div class=\"item\">\r\n                     <div *ngIf=\"answers.isBeingEdited == true\">\r\n                       <choice [selPost] = \"answers\" [isNewPost]=\"false\">\r\n                       </choice>\r\n                     </div>                     \r\n                     <div *ngIf=\"answers.isBeingEdited == false\">\r\n                       <div *ngIf=\"answers.isTypingReply == true\">\r\n                         <choice (endReply)=\"cancelReply(answers)\" [topLevelPost]=\"current\" [selPost] = \"answers\" [isNewPost]=\"false\">\r\n                         </choice>\r\n                       </div>\r\n                       <div *ngIf=\"answers.isTypingReply == false \">\r\n                          <div *ngIf=\"!answers.contentImage\">\r\n                           <h1> {{answers.title}} </h1>\r\n                           {{answers.contentText}}\r\n                          </div>\r\n                           <div *ngIf=\"!answers.contentText\">\r\n                             <h1> {{answers.title}} </h1>\r\n                             <img class=\"postimg\" src=\"{{answers.contentImage}}\">\r\n                           </div>\r\n                       </div>\r\n                       <div *ngIf=\"answers.isTypingReply == false\">\r\n                        <span class=\"created\">Created: {{answers.date | date}}\r\n                         <span *ngIf=\"current.lastModified == null\"> Last modified: -</span>\r\n                         <span *ngIf=\"current.lastModified != null\">Last modified: {{current.lastModified | date}}</span>\r\n                       </span>\r\n                       </div>\r\n                   </div>\r\n                   <br>                \r\n                 </div>\r\n                 </div>              \r\n                 <div class=\"item_4 symbols\">\r\n                   <div *ngIf=\"answers?.author == user?.id && answers.isTypingReply == false\"> \r\n                   <div *ngIf=\"answers.isTypingReply == false\">\r\n                     <span class=\"nounder\" (click)=\"editAnswer(answers, $event)\">\r\n                       <i class=\"material-icons\">create</i>\r\n                     </span>\r\n                     <br>\r\n                     <br>\r\n                   </div>\r\n                   <div *ngIf=\" (answers?.author == user?.id || user?.position == 1 )&& answers.isTypingReply == false\"> \r\n                   <div *ngIf=\" answers.isTypingReply == false\">\r\n                     <span class=\"nounder\" (click)=\"deleteReply(current, answers, $event)\">\r\n                       <i class=\"material-icons\">clear</i>\r\n                     </span>\r\n                   </div>                  \r\n                 </div>\r\n               </div>\r\n             </div>\r\n           </div>           \r\n         </div>         \r\n       </div>        \r\n      </div>\r\n    </div>\r\n      </div>\r\n      </div>\r\n  `,\r\n  providers: [PostService]\r\n})\r\n\r\n\r\nexport class PostComponent implements  OnInit\r\n{\r\n  title = 'CoLAB';\r\n  user : User;\r\n\r\n  // -------------------\r\n feedPosts : Post[] = this.feedService.getFeedPost();\r\n repliesForCurrent : Post[] = this.feedService.getRepliesForCurrent();\r\n  editedPost : Post;\r\n  // -------------------\r\n  singlePost : Post;\r\n  tP : Post[];\r\n  tP2: Post[];\r\n  editMode : boolean = false;\r\n  subscriptionFeed : any;\r\n  subscriptionReply: any;\r\n\r\n  selectedPost : Post;\r\n  selectedAnswer : Post;\r\n\r\n  constructor(private postService: PostService, private userService : UserService, private feedService : FeedService, private router : Router)\r\n  {\r\n    this.subscriptionFeed = this.feedService.needToUpdateFeed.subscribe( (val) =>  {\r\n      this.feedPosts = this.feedService.getFeedPost(); console.log(\"update me\"); });\r\n    this.subscriptionReply = this.feedService.needToUpdateReply.subscribe( (val) =>  { this.repliesForCurrent = this.feedService.getRepliesForCurrent(); console.log(\"update me\");\r\n    });\r\n\r\n    this.user = userService.getGlobalUser();\r\n\r\n  }\r\n\r\n  gotoProfile(sel : Post) {\r\n    this.router.navigate(['profile/'+sel.author]);\r\n  }\r\n\r\n  onSelectAnswer(selected : Post, ev : any ) {\r\n    this.selectedAnswer = selected;\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.userService.getGlobalUser();\r\n    this.userService.refreshUser();\r\n\r\nconsole.log(\"got user\");\r\n\r\n    this.postService.getSortedByNewest().then(res => {\r\n\r\n      this.feedService.resetFeed();\r\n       for (let elem of res) {\r\n          // add to feedPosts if element is post\r\n          if (elem.isPost === 0) {\r\n            let len = this.feedService.feedPush(elem);\r\n          }\r\n        }\r\n      this.feedService.initFeed();\r\n      this.feedPosts = this.feedService.getFeedPost();\r\n      }\r\n    );\r\n\r\n    console.log(\"sort done\");\r\n  }\r\n\r\n  cancelReply(post : Post) : void {\r\n    post.isTypingReply = false;\r\n    // temporarily added element can be deleted now as user chose to cancel editing\r\n    this.feedService.repliesShift();\r\n    this.feedPosts = this.feedService.getFeedPost();\r\n\r\n  }\r\n\r\n  onSelect(selected : Post, ev: any): void {\r\n\r\n  ev.stopPropagation();\r\n    if (this.selectedPost === selected) {\r\n      // if is already showing replies --> hide\r\n      if (this.selectedPost.repliesVisible) {\r\n        this.selectedPost.repliesVisible = false;\r\n      }\r\n      // else: fetch & show replies\r\n      else {\r\n        this.feedService.resetReplies();\r\n        this.selectedPost.repliesVisible = true;\r\n        // fetch replies\r\n        this.postService.getRepliesTo(selected.id).then(res => {\r\n          // let rp = this.feedService.getRepliesForCurrent();\r\n          for (let elem of res) {\r\n            // add to feedPosts if element is answer / responseTo\r\n            if (elem.isPost === 1) {\r\n             // console.log(\"fetched reply with text \" + elem.contentText);\r\n              let len = this.feedService.repliesPush(elem);\r\n            }\r\n          }\r\n          this.feedService.initReplies();\r\n          this.repliesForCurrent = this.feedService.getRepliesForCurrent();\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      if (this.selectedPost != null) {\r\n        this.selectedPost.repliesVisible = false;\r\n      }\r\n      this.selectedPost = selected;\r\n      this.postService.getRepliesTo(selected.id).then(res => {\r\n        this.feedService.resetReplies();\r\n        for (let elem of res) {\r\n          // add to feedPosts if element is post\r\n          if (elem.isPost === 1) {\r\n            let len = this.feedService.repliesPush(elem);\r\n          }\r\n        }\r\n        this.feedService.initReplies();\r\n        this.repliesForCurrent = this.feedService.getRepliesForCurrent();\r\n\r\n      });\r\n      this.selectedPost.repliesVisible = true;\r\n    }\r\n  }\r\n\r\n  assignPost(post :Post) : void {\r\n  }\r\n\r\n  refresh() {\r\n    this.postService.getAllPosts().then(res => {\r\n        this.feedService.resetFeed();\r\n        for (let elem of res) {\r\n          // add to feedPosts if element is post\r\n          if (elem.isPost === 0) {\r\n            let len = this.feedService.feedPush(elem);\r\n          }\r\n        }\r\n        this.feedService.initFeed();\r\n        this.feedPosts = this.feedService.getFeedPost();\r\n      }\r\n    );\r\n  }\r\n\r\n  editAnswer (selected : Post, ev :any) : void {\r\n    // console.log(\"Clicked edit answer on \" + selected.title);\r\n    this.selectedAnswer = selected;\r\n    this.editedPost = Object.assign({}, selected);\r\n    ev.stopPropagation();\r\n\r\n    if(selected.isBeingEdited == true) {\r\n      selected.isBeingEdited = false;\r\n    }\r\n    else {\r\n      for (let elem of this.repliesForCurrent) {\r\n        if (elem === selected) {\r\n          selected.isBeingEdited = true;\r\n        }\r\n        else {\r\n          elem.isBeingEdited = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  editPost(selected : Post, ev: any ): void {\r\n    // deep copy of post in order to roll back changes if user decides to cancel editing\r\n  this.selectedPost = selected;\r\n    this.editedPost = Object.assign({}, selected);\r\n    ev.stopPropagation();\r\n\r\n   if(this.editMode) {\r\n     this.editMode = false;\r\n   } else {\r\n     this.editMode = true;\r\n   }\r\n\r\n\r\n    if(selected.isBeingEdited == true) {\r\n      selected.isBeingEdited = false;\r\n    }\r\n    else {\r\n      for (let elem of this.feedPosts) {\r\n        if (elem === selected) {\r\n          selected.isBeingEdited = true;\r\n        }\r\n        else {\r\n          elem.isBeingEdited = false;\r\n        }\r\n      }\r\n    }\r\n    if(selected.isBeingEdited == false) {\r\n    //  console.log(\"Current.isBeingEdited is now set to false\");\r\n    }\r\n  else {\r\n // console.log(\"Current.isBeingEdited is now set to true\");\r\n }\r\n  }\r\n\r\n  onSubmitEdit() : void {\r\n    /* selected.isBeingEdited = false; */\r\n  }\r\n\r\n  onCancelEdit() : void {\r\n    /* selected.isBeingEdited = false; */;\r\n  }\r\n\r\n  deletePost(selected : Post, ev : any): void {\r\n    ev.stopPropagation();\r\n    this.postService.deletePost(selected.id).subscribe(data => { this.updateFeed(data, selected);\r\n      this.userService.refreshUser(); });\r\n  }\r\n\r\n  deleteReply(tlp : Post, selected : Post, ev : any): void {\r\n    ev.stopPropagation();\r\n    this.postService.deletePost(selected.id).subscribe(data => { this.updateFeedWithParent(tlp, data, selected);\r\n      this.userService.refreshUser(); });\r\n  }\r\n\r\n  updateFeed(data: any, element : Post) {\r\n    if(data.status == 200) {\r\n      // isPost --> delete from feedPosts\r\n      if(element.isPost == 0) {\r\n        this.feedService.decrement();\r\n        this.feedService.deleteFromFeed(element);\r\n        this.feedPosts = this.feedService.getFeedPost();\r\n      }\r\n      // else: delete from repliesForCurrent\r\n      else {\r\n\r\n        this.feedService.deleteFromReplies(element);\r\n        this.repliesForCurrent = this.feedService.getRepliesForCurrent();\r\n      }\r\n    }\r\n    else { }\r\n  }\r\n\r\n  updateFeedWithParent(tlp : Post, data: any, element : Post) {\r\n    if(data.status == 200) {\r\n        this.feedService.decrementReplies(tlp);\r\n        this.feedService.deleteFromReplies(element);\r\n        this.repliesForCurrent = this.feedService.getRepliesForCurrent();\r\n      }\r\n  }\r\n\r\n  reply(selected : Post, ev : any): void {\r\n    ev.stopPropagation();\r\n    // if not already replying --> new one\r\n    if(!selected.isTypingReply) {\r\n      // if it wasnt selected previously, get replies\r\n     // console.log(\"arr length b4 : \" + this.repliesForCurrent.length);\r\n      for(let elem of this.feedPosts) {\r\n        if(elem !== selected) {\r\n          elem.isTypingReply = false;\r\n          elem.repliesVisible = false;\r\n        }\r\n      }\r\n\r\n\r\n      this.feedService.resetReplies();\r\n      selected.repliesVisible = true;\r\n      this.postService.getRepliesTo(selected.id).then(res => {\r\n        for (let elem of res) {\r\n          // add to feedPosts if element is answer / responseTo\r\n          if (elem.isPost === 1) {\r\n            let len = this.feedService.repliesPush(elem);\r\n          }\r\n        }\r\n        this.feedService.initReplies();\r\n        this.feedService.repliesUnshift(new Post());\r\n        this.feedService.setIsTyping();\r\n        this.repliesForCurrent = this.feedService.getRepliesForCurrent();\r\n      });\r\n    }\r\n    // else: do nothing since already in reply mode\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/postit.component.ts","import { Injectable, Output, EventEmitter } from '@angular/core';\r\nimport { Post } from './post';\r\nimport { Headers, Http, RequestOptions } from '@angular/http';\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport { UserService } from './user.service';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class PostService {\r\n\r\n  constructor(private http: Http, private userService : UserService) { }\r\n\r\n  private url = 'http://localhost:8080/Webtech2Project/rest/postitservice/';\r\n  private headers = new Headers({'Content-Type': 'application/json'});\r\n\r\n  getAllPosts() : Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url + 'fetch_all').\r\n      toPromise().\r\n      then(response => response.json().postit as Post[]);\r\n    }\r\n\r\n    getRepliesTo(id:number): Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url+'responses/'+id).\r\n      toPromise().\r\n      then (response => response.json().postit as Post[]);\r\n    }\r\n\r\n    getById(id:number) : any {\r\n    return this.http.get(this.url+'find/'+id).toPromise();\r\n    }\r\n\r\n  getSortedByNewest(): Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url+'fetch_all_sort_date_oldest').\r\n    toPromise().\r\n    then(response => response.json().postit as Post[]);\r\n    }\r\n\r\n  getSortedByOldest(): Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url+'fetch_all_sort_date').\r\n    toPromise().\r\n    then(response => response.json().postit as Post[]);\r\n  }\r\n\r\n\r\n  getSortedByPopular(): Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url+'fetch_all_sort_clicks').\r\n      toPromise().\r\n      then(response => response.json().postit as Post[]);\r\n  }\r\n\r\n  getAllPostsByUser (id: number) : Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url+'postits_by/'+id).\r\n      toPromise().\r\n      then(response => response.json().postit as Post[]);\r\n  }\r\n\r\n  getOnlyRepliesByUser (id: number) : Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url+'postits_responses_by/'+id).\r\n      toPromise().\r\n      then(response => response.json().postit as Post[]);\r\n  }\r\n\r\n  getOnlyPostsByUser (id: number) : Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url+'postits_only_posts/'+id).\r\n      toPromise().\r\n      then(response => response.json().postit as Post[]);\r\n  }\r\n\r\n  createPostText(internalPost : Post) : any {\r\n    let body = '{ \"postit\":{\"id\":-1,\"answers\":0,\"clicks\":0,\"contentImage\":null,\"contentText\":\"' + internalPost.contentText + '\",\"date\":1498663847000,\"isPost\":0,\"lastModified\":1498663847000,\"responseTo\":0,\"title\":\"' + internalPost.title + '\",\"author\":' + this.userService.getGlobalUser().id + '}}';\r\n   // console.log(\"Stringified post : \" + body);\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n  //  console.log(\"post text method called inside\");\r\n    return this.http.post(this.url+'create_by_json', body, options);\r\n  }\r\n\r\n  uploadImage(payload : any) : any {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n   // console.log(\"post image method called inside\");\r\n    return this.http.post('http://localhost:8080/Webtech2Project/rest/file/postit', payload);\r\n  }\r\n\r\n  createPostImage(res : any, title : string) : any {\r\n        if(res.status == 200) {\r\n         // console.log(\"img post appears to be succesful\");\r\n          let path = res.json().location;\r\n          console.log(\"path from json : \" + path);\r\n\r\n          let body = '{ \"postit\":{\"id\":-1,\"answers\":0,\"clicks\":0,\"contentImage\":\"' + path +'\",\"contentText\":null,\"date\":1498663847000,\"isPost\":0,\"lastModified\":1498663847000,\"responseTo\":0,\"title\":\"' + title + '\",\"author\":' + this.userService.getGlobalUser().id + '}}';\r\n        //  console.log(\"Stringified post : \" + body);\r\n          let headers = new Headers({ 'Content-Type': 'application/json' });\r\n          let options = new RequestOptions({ headers: headers });\r\n        //  console.log(\"post text method called inside\");\r\n          return this.http.post(this.url+'create_by_json', body, options);\r\n        }\r\n        else {\r\n         // console.log(\"CreatePostImage: Response status other than 200, in fact it was \" + res.status);\r\n        }\r\n      }\r\n\r\n  updatePostText(id: number, internalPost : Post) : any {\r\n    let body = '{ \"postit\":{\"id\":-1,\"answers\":0,\"clicks\":0,\"contentImage\":null,\"contentText\":\"' + internalPost.contentText + '\",\"date\":1498663847000,\"isPost\":0,\"lastModified\":1498663847000,\"responseTo\":0,\"title\":\"' + internalPost.title + '\",\"author\":' + this.userService.getGlobalUser().id + '}}';\r\n   // console.log(\"Stringified post : \" + body + \" --- ID : \" +  id);\r\n    //console.log(this.url+'update/'+id);\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n   // console.log(body + \" +++ \" +  options);\r\n    return this.http.post(\r\n      this.url+'update/'+id, body, options);\r\n  }\r\n\r\n  updatePostImage(res : any, title : string, id : number) : any {\r\n    if(res.status == 200) {\r\n     // console.log(\"img post appears to be succesful\");\r\n      let path = res.json().location;\r\n    //  console.log(\"path from json : \" + path);\r\n      let body = '{ \"postit\":{\"id\":-1,\"answers\":0,\"clicks\":0,\"contentImage\":\"' + path +'\",\"contentText\":null,\"date\":1498663847000,\"isPost\":0,\"lastModified\":1498663847000,\"responseTo\":0,\"title\":\"' + title + '\",\"author\":' + this.userService.getGlobalUser().id + '}}';\r\n     // console.log(\"Stringified post : \" + body);\r\n      let headers = new Headers({ 'Content-Type': 'application/json' });\r\n      let options = new RequestOptions({ headers: headers });\r\n    //  console.log(\"post text method called inside\");\r\n    //  console.log(\"call post for UPDATAETE\");\r\n      return this.http.post(this.url+'update/'+id, body, options);\r\n    }\r\n    else {\r\n     // console.log(\"CreatePostImage: Response status other than 200, in fact it was \" + res.status);\r\n    }\r\n  }\r\n\r\n\r\n  // TODO Wie oben: erst neues Bild hochladen, dann status prüfen und path aus der response als neuen Wert setzen\r\n  // TODO Entsprechend muss nur Title & ContentImage aktualisiert werden!!!s\r\n  /* updatePostImage(payload : any, title: string, id : number) : any {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    console.log(\"post image method called inside\");\r\n    this.http.post('http://localhost:8080/Webtech2Project/rest/file/postit', payload).toPromise().then(\r\n      res => {\r\n        if(res.status == 200) {\r\n          console.log(\"img post appears to be succesful\");\r\n          let path = res.json();\r\n          console.log(\"path from json : \" + path);\r\n\r\n          let body = '{ \"postit\":{\"id\":-1,\"answers\":0,\"clicks\":0,\"contentImage\"' + path +',\"contentText\":null,\"date\":1498663847000,\"isPost\":0,\"lastModified\":1498663847000,\"responseTo\":0,\"title\":\"' + title + '\",\"author\":' + this.userService.getGlobalUser().id + '}}';\r\n          console.log(\"Stringified post : \" + body);\r\n          let headers = new Headers({ 'Content-Type': 'application/json' });\r\n          let options = new RequestOptions({ headers: headers });\r\n          console.log(\"post text method called inside\");\r\n          return this.http.post(this.url+'update/'+id, body, options);\r\n        }\r\n        else {\r\n          console.log(\"CreatePostImage: Response status other than 200, in fact it was \" + res.status);\r\n        }\r\n      }\r\n\r\n    );\r\n\r\n  } */\r\n\r\n\r\n  createReplyText(internalPost : Post, parentPost : Post) : any {\r\n      let body = '{ \"postit\":{\"id\":-1,\"answers\":0,\"clicks\":0,\"contentImage\":null,\"contentText\":\"' + internalPost.contentText + '\",\"date\":1498663847000,\"isPost\":1,\"lastModified\":1498663847000,\"responseTo\":' + parentPost.id + ',\"title\":\"' + internalPost.title + '\",\"author\":' + this.userService.getGlobalUser().id + '}}';\r\n     // console.log(\"Stringified post : \" + body);\r\n      let headers = new Headers({ 'Content-Type': 'application/json' });\r\n      let options = new RequestOptions({ headers: headers });\r\n     // console.log(\"post text method called inside\");\r\n      return this.http.post(this.url+'create_by_json', body, options);\r\n  }\r\n\r\n  createReplyImage(internalPost : Post, parentPost : Post, path : any) : any {\r\n\r\n    let p = path.json().location;\r\n    let body = '{ \"postit\":{\"id\":-1,\"answers\":0,\"clicks\":0,\"contentImage\":\"' + p +'\",\"contentText\": null,\"date\":1498663847000,\"isPost\":1,\"lastModified\":1498663847000,\"responseTo\":' + parentPost.id + ',\"title\":\"' + internalPost.title + '\",\"author\":' + this.userService.getGlobalUser().id + '}}';\r\n   // console.log(\"Stringified post : \" + body);\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n   // console.log(\"post text method called inside\");\r\n    return this.http.post(this.url+'create_by_json', body, options);\r\n  }\r\n\r\n  deletePost(id: number) : any {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    return this.http.delete(this.url+'delete/'+id, headers);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/postit.service.ts","import { Component, OnInit, Input} from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Location }                 from '@angular/common';\r\nimport { User } from './user';\r\nimport { UserService } from './user.service';\r\nimport {PostService} from \"./postit.service\";\r\nimport {Post} from './post';\r\nimport 'rxjs/add/operator/switchMap';\r\n\r\n\r\n@Component({\r\n  selector: 'profilepage',\r\n  template: `\r\n    <main>      \r\n      <div class=\"col_4\">\r\n        <div class=\"infos\">\r\n          <div class=\"avatar\">\r\n            <img src=\"http://localhost:8080/{{user?.avatar}}\" class=\"profpicfull\"/>\r\n          </div>\r\n\r\n          <div class=\"contactinfos\">\r\n            <span class=\"contact\"><i class=\"material-icons\">face</i> {{user?.name}} {{user?.surname}}</span>\r\n            <span class=\"contact\"><i class=\"material-icons\">business</i>{{user?.location}}</span>\r\n            <span class=\"contact\"><i class=\"material-icons\">phone</i>{{user?.phone}}</span>\r\n            <span class=\"contact\"><i class=\"material-icons\">print</i>{{user?.fax}}</span>\r\n            <span class=\"contact\"><i class=\"material-icons\">cake</i>{{user?.birthDate | date}}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"sort\">\r\n          <span class=\"sortspan\" (click)=\"showAll()\">Alles anzeigen</span>\r\n          <span class=\"sortspan\" (click)=\"onlyOwnReplies()\">Nur eigene Posts anzeigen</span>\r\n          <span class=\"sortspan\" (click)=\"onlyOwnPosts()\">Nur Antworten anzeigen</span>\r\n          \r\n        </div>\r\n\r\n        <div *ngFor=\"let posts of profilePosts\">\r\n          <div class=\"results\">\r\n            <div class=\"content\">\r\n              <div class=\"flexcol\">\r\n                <div class=\"flexrow\">\r\n                  <div class=\"item stats\">\r\n                    <img class=\"feedpic\" src=\"http://localhost:8080/{{posts.avatar_path}}\">\r\n\r\n                    <div class=\"text\">\r\n                      <ul class=\"ulstat\">\r\n                        <li>by {{posts.author_name}} {{posts.author_surname}}</li>\r\n                        <li>Replies:{{posts.postit_replies}}</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"item_2 flexcol\">\r\n                    <div *ngIf=\"!posts.contentImage\">\r\n                      <div class=\"item\">\r\n                        <h1>{{posts.title}} </h1>\r\n                        {{posts.contentText}}\r\n                      </div>\r\n                    </div>\r\n                    <div *ngIf=\"!posts.contentText\">\r\n                      <div class=\"item\">\r\n                        <h1>{{posts.title}} </h1>\r\n                        <img class=\"postimg\" src=\"{{posts.contentImage}}\"/>\r\n                      </div>\r\n                    </div>\r\n                    <!--  <div class=\"item lmod\">\r\n                                      Created: 01.06.2017 13:37. Last modified: -\r\n                                  </div> -->\r\n                    <br>\r\n                    <span class=\"created\"> Created: {{ ( posts.date | date )}}\r\n                      <span *ngIf=\"posts.lastModified == null\"> Last modified: -</span>\r\n                      <span *ngIf=\"posts.lastModified != null\">Last modified: {{posts.lastModified || date}}</span>\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"item_4 symbols\">\r\n                    <!-- <a href=\"#\" class=\"nounder\">\r\n                      <i class=\"material-icons\">create</i>\r\n                    </a> -->\r\n                    <div *ngIf=\"posts.author == globlUsr.id || globlUsr.position == 1\">\r\n                      <br>\r\n                      <br>\r\n                      <div class=\"nounder\" (click)=\"deletePost(posts, $event)\">\r\n                        <i class=\"material-icons\">clear</i>\r\n                      </div>\r\n                      <br>\r\n                      <br>\r\n                    </div>\r\n                    <!--\r\n                  <a href=\"#\" class=\"nounder\">\r\n                    <i class=\"material-icons\">reply</i>\r\n                  </a> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main> `,\r\n  providers : [PostService]\r\n\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  title = 'CoLAB';\r\n  private id : number;\r\n  private help : any;\r\n  private user : User = new User();\r\n  private path : string;\r\n  private globlUsr : User;\r\n\r\n // private user : User;\r\n  private profilePosts : Post[];\r\n\r\n  constructor(private userService: UserService, private postService : PostService,  private route: ActivatedRoute,\r\n              private location: Location)\r\n  { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.help = this.route.params.subscribe(params => {\r\n      this.id = +params['id']; this.setUser();\r\n    });\r\n\r\n    this.globlUsr = this.userService.getGlobalUser();\r\n\r\n  }\r\n\r\n  setUser() {\r\n    // falls es keine Nummer ist\r\n    if(isNaN(this.id)){\r\n      // getGlobalUser details for profile page\r\n      this.postService.getAllPostsByUser(this.userService.getGlobalUser().id).then(res => this.profilePosts = res);\r\n      this.user = this.userService.getGlobalUser();\r\n      this.path = 'http://localhost:8080/' + this.user.avatar;\r\n      this.id = this.user.id;\r\n    }\r\n    else {\r\n      // get details for User with param ID from URL\r\n      this.postService.getAllPostsByUser(this.id).then(res => this.profilePosts = res);\r\n      this.userService.getUser(this.id).then(res => this.user = res);\r\n      this.path = 'http://localhost:8080/' + this.user.avatar;\r\n    }\r\n\r\n  }\r\n\r\n  showAll() : void {\r\n    this.postService.getAllPostsByUser(this.id).then(res => this.profilePosts = res);\r\n  }\r\n\r\n  onlyOwnPosts() : void {\r\n    this.postService.getOnlyPostsByUser(this.id).then(res => this.profilePosts = res);\r\n  }\r\n\r\n  onlyOwnReplies() : void {\r\n    this.postService.getOnlyRepliesByUser(this.id).then(res => this.profilePosts = res);\r\n  }\r\n\r\n  setId(num : number) {\r\n    this.id = num;\r\n  }\r\n\r\n  deletePost(selected : Post, ev : any): void {\r\n    ev.stopPropagation();\r\n\r\n    this.postService.deletePost(selected.id).subscribe(data => {this.updateFeed(data, selected);\r\n  //   this.userService.refreshUser();\r\n    });\r\n  }\r\n\r\n\r\n  updateFeed(data: any, element : Post) {\r\n    if(data.status == 200) {\r\n\r\n      let ind = this.profilePosts.indexOf(element);\r\n      this.profilePosts.splice(ind, 1);\r\n    }\r\n    else {\r\n\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/profile.component.ts","import {Component, Input, OnInit} from '@angular/core';\r\nimport { ProfileBadgeData } from './profilebadge';\r\nimport { UserService } from './user.service';\r\nimport { User } from './user';\r\n\r\n@Component\r\n({\r\n  selector: 'profileBadge',\r\n  template: `\t\t\r\n    <div class=\"col_1_adjusted\">\r\n      <div class=\"feedtext\">\r\n        You\r\n      </div>\r\n      <img src=\"http://localhost:8080/{{user?.avatar}} \"class=\"profilepic\"/>\r\n      <br>\r\n      <div class=\"profilestats\">\r\n        Amount of posts:\r\n        <br> {{user.postit_count}}\r\n       <!-- <br>\r\n        Amount of views:\r\n        <br>\r\n        1337 -->\r\n      </div>\r\n      <br>\r\n      <div class=\"profstatdiv\">\r\n        <ul class=\"profilestatul\">\r\n          <li class=\"leftli\" routerLink=\"\"><a><i class=\"material-icons\">keyboard_arrow_right</i> Feed</a></li>\r\n          <li class=\"leftli\" routerLink=\"/profile\"><a ><i class=\"material-icons\">keyboard_arrow_right</i> Profile</a></li>\r\n          <li class=\"leftli\" routerLink=\"/settings\"><a><i class=\"material-icons\">keyboard_arrow_right</i> Settings</a></li>\r\n          <li class=\"leftli\" routerLink=\"/logout\" (click)=\"logUserOut()\" ><a><i class=\"material-icons\">keyboard_arrow_right</i> Signout</a></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\n\r\nexport class ProfileBadge implements OnInit {\r\n\r\n  user : User;\r\n  path : string;\r\n\r\n\r\n  constructor(private userService: UserService) {\r\n    this.userService.updateUserStatus.subscribe(val => { this.user = this.userService.getGlobalUser();  console.log(\"update in profbadge called\")});\r\n  }\r\n\r\n  ngOnInit() : void {\r\n    this.user = this.userService.getGlobalUser();\r\n    console.log(this.user.name);\r\n    this.path = 'http://localhost:8080/' + this.user.avatar;\r\n    console.log(\"AVATAR PATH : \" +  this.user.avatar);\r\n  }\r\n\r\n  logUserOut() {\r\n    this.userService.logOut();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/profilebadge.component.ts","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { Post } from './post';\r\nimport { PostService } from './postit.service';\r\nimport {SortService} from \"./sort.service\";\r\nimport { Headers, Http, RequestOptions } from '@angular/http';\r\nimport {FeedService} from \"./feed.service\";\r\nimport { User } from './user';\r\nimport {UserService} from \"./user.service\";\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Component ({\r\n  selector: 'settings',\r\n  template: `\r\n    <div class=\"bg2\">\r\n<div class=\"centerIt\">  \r\n  Update your personal information here. <br>\r\n  Please always enter your current password to confirm your identity.<br>\r\n  All other fields are optional. <br>  </div>\r\n  <div class=\"login-page2\">\r\n    <div class=\"form\">\r\n      <form class=\"login-form\">\r\n        <input type=\"file\" #imgUpload accept=\"image/*\"> <br>\r\n        <input type=\"text\" [(ngModel)]=\"updateUser.email\" name=\"whytho\" placeholder=\"new email\"> <br>\r\n        <input type=\"password\" [(ngModel)]=\"updateUser.password\" name=\"whytho2\" placeholder=\"change password\"> <br>\r\n        <input type=\"password\" [(ngModel)]=\"checkpw\" name=\"whytho25\" placeholder=\"confirm new password\"> <br>\r\n        <input type=\"date\" [(ngModel)]=\"updateUser.birthDate\" name=\"whytho3\" placeholder=\"change Birth date (YYYY-MM-DD)\"> <br>\r\n        <input type=\"text\" [(ngModel)]=\"updateUser.name\" name=\"whytho4\" placeholder=\"change first name\"> <br>\r\n        <input type=\"text\" [(ngModel)]=\"updateUser.surname\" name=\"whytho5\" placeholder=\"change last name\"> <br>\r\n        <input type=\"text\" [(ngModel)]=\"updateUser.location\" name=\"whytho6\"\r\n               placeholder=\"Change your location inside the company\">  <br>\r\n        <input type=\"text\" [(ngModel)]=\"updateUser.phone\" name=\"whytho7\" placeholder=\"Change your phone\">  <br>\r\n        <input type=\"text\" [(ngModel)]=\"updateUser.fax\" name=\"whytho8\" placeholder=\"Change your fax\">  <br>\r\n        <input type=\"text\" [(ngModel)]=\"updateUser.gender\" name=\"whytho9\" placeholder=\"Change your gender\"> <br>\r\n        <input type=\"password\" [(ngModel)]=\"confirmpw\" name=\"whytho10\" placeholder=\"Your current password\">\r\n        <button (click)=\"tryUpdate()\">Update your profile</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <br>\r\n  <br>\r\n</div>\r\n  <!--  <form>\r\n      <input type=\"file\" #imgUpload accept=\"image/*\"> <br>\r\n\r\n      <input type=\"text\" [(ngModel)]=\"updateUser.email\" name=\"whytho\" placeholder=\"new email\"> <br>\r\n      <input type=\"password\" [(ngModel)]=\"updateUser.password\" name=\"whytho2\" placeholder=\"change password\"> <br>\r\n      <input type=\"password\" [(ngModel)]=\"checkpw\" name=\"whytho25\" placeholder=\"confirm new password\"> <br>\r\n      <input type=\"date\" [(ngModel)]=\"updateUser.birthDate\" name=\"whytho3\" placeholder=\"change Birth date (YYYY-MM-DD)\"> <br>\r\n      <input type=\"text\" [(ngModel)]=\"updateUser.name\" name=\"whytho4\" placeholder=\"change first name\"> <br>\r\n      <input type=\"text\" [(ngModel)]=\"updateUser.surname\" name=\"whytho5\" placeholder=\"change last name\"> <br>\r\n      <input type=\"text\" [(ngModel)]=\"updateUser.location\" name=\"whytho6\"\r\n             placeholder=\"Change your location inside the company\">  <br>\r\n      <input type=\"text\" [(ngModel)]=\"updateUser.phone\" name=\"whytho7\" placeholder=\"Change your phone\">  <br>\r\n      <input type=\"text\" [(ngModel)]=\"updateUser.fax\" name=\"whytho8\" placeholder=\"Change your fax\">  <br>\r\n      <input type=\"text\" [(ngModel)]=\"updateUser.gender\" name=\"whytho9\" placeholder=\"Change your gender\"> <br>\r\n\r\n\r\n      <br>\r\n      <br>\r\n      Please type in your current password to verify all changes upon sending.\r\n      <br>\r\n      <input type=\"password\" [(ngModel)]=\"confirmpw\" name=\"whytho10\" placeholder=\"Your password\">\r\n\r\n\r\n      <input type=\"submit\" value=\"Update your profile\" (click)=\"tryUpdate()\">\r\n    </form> -->\r\n\r\n  `,\r\n  styleUrls: ['loginstyle.css'],\r\n  providers: []\r\n})\r\n\r\nexport class SettingsComponent implements OnInit\r\n{\r\n  @ViewChild('imgUpload') imgUp;\r\n  tempUser : User;\r\n  private checkpw : string = '';\r\n  private updateUser = new User();\r\n  private confirmpw : string = '';\r\n\r\n  constructor(private http: Http, private userService : UserService,private router: Router) {\r\n    this.tempUser = userService.getGlobalUser();\r\n    console.log(\"OnInit is bday set to \" + this.tempUser.birthDate);\r\n    this.tempUser.password = '';\r\n    this.updateUser.password = '';\r\n  }\r\n\r\n  ngOnInit() : void {\r\n    this.http.get('http://localhost:8080/Webtech2Project/rest/login/getPrincipal').subscribe(data => console.log(\"PRINCIPAL TEST IN SETTINGS : \" + data));\r\n  }\r\n\r\n  tryUpdate() : void {\r\n    if(this.updateUser.email != null) {\r\n      // wanted to update, but invalid input\r\n     if (this.updateUser.email.replace(/\\s/g, '').length == 0) {\r\n      console.log(\"nur aus whitespaces bestehend!\")\r\n     } else {\r\n       // valid input\r\n       console.log(\"email gefüllt\");\r\n       this.tempUser.email = this.updateUser.email;\r\n     }\r\n    } else {\r\n      // --> No changes to tempUser\r\n      console.log(\"update user email null\");\r\n    }\r\n\r\n    if(this.updateUser.birthDate != null ){\r\n      console.log(\"birthdate gefüllt\");\r\n\r\n      this.tempUser.birthDate = this.updateUser.birthDate;\r\n      }\r\n     else {     // --> No changes to tempUser\r\n      console.log(\"update user birth date null\");\r\n    }\r\n\r\n    if(this.updateUser.name != null ){\r\n      // wanted to update, but invalid input\r\n      if (this.updateUser.name.replace(/\\s/g, '').length == 0) {\r\n        console.log(\"nur aus whitespaces bestehend!\")\r\n      } else {\r\n        // valid input\r\n        console.log(\"name gefüllt\");\r\n        this.tempUser.name = this.updateUser.name;\r\n      }\r\n    } else {\r\n      // --> No changes to tempUser\r\n      console.log(\"update user name null\");\r\n    }\r\n\r\n    if(this.updateUser.surname != null ){\r\n      // wanted to update, but invalid input\r\n      if (this.updateUser.surname.replace(/\\s/g, '').length == 0) {\r\n        console.log(\"nur aus whitespaces bestehend!\")\r\n      } else {\r\n        // valid input\r\n        console.log(\"surname gefüllt\");\r\n        this.tempUser.surname = this.updateUser.surname;\r\n      }\r\n    } else {\r\n      // --> No changes to tempUser\r\n      console.log(\"update user surname null\");\r\n    }\r\n\r\n\r\n    if(this.updateUser.location != null ){\r\n      // wanted to update, but invalid input\r\n      if (this.updateUser.location.replace(/\\s/g, '').length == 0) {\r\n        console.log(\"nur aus whitespaces bestehend!\")\r\n      } else {\r\n        // valid input\r\n        console.log(\"location gefüllt\");\r\n        this.tempUser.location = this.updateUser.location;\r\n      }\r\n    } else {\r\n      // --> No changes to tempUser\r\n      console.log(\"update user locatoin null\");\r\n    }\r\n\r\n\r\n    if(this.updateUser.phone != null ){\r\n      // wanted to update, but invalid input\r\n      if (this.updateUser.phone.replace(/\\s/g, '').length == 0) {\r\n        console.log(\"nur aus whitespaces bestehend!\")\r\n      } else {\r\n        // valid input\r\n        console.log(\"phone gefüllt\");\r\n        this.tempUser.phone = this.updateUser.phone;\r\n      }\r\n    } else {\r\n      // --> No changes to tempUser\r\n      console.log(\"update user phine null\");\r\n    }\r\n\r\n\r\n    if(this.updateUser.fax != null ){\r\n      // wanted to update, but invalid input\r\n      if (this.updateUser.phone.replace(/\\s/g, '').length == 0) {\r\n        console.log(\"nur aus whitespaces bestehend!\")\r\n      } else {\r\n        // valid input\r\n        console.log(\"fax gefüllt\");\r\n        this.tempUser.fax = this.updateUser.fax;\r\n      }\r\n    } else {\r\n      // --> No changes to tempUser\r\n      console.log(\"update user fax null\");\r\n    }\r\n\r\n\r\n    if(this.updateUser.gender != null ){\r\n      // wanted to update, but invalid input\r\n      if (this.updateUser.phone.replace(/\\s/g, '').length == 0) {\r\n        console.log(\"nur aus whitespaces bestehend!\")\r\n      } else {\r\n        // valid input\r\n        console.log(\"gender gefüllt\");\r\n        this.tempUser.gender = this.updateUser.gender;\r\n      }\r\n    } else {\r\n      // --> No changes to tempUser\r\n      console.log(\"update user gender null\");\r\n    }\r\n\r\n    // Now: all valid changes are already propagated to the tempUser Object.\r\n    // Check for passwords now, then try to update user on the db\r\n\r\n    if(this.checkpw.replace(/\\s/g, '').length == 0) {\r\n      if(this.updateUser.password.replace(/\\s/g, '').length == 0) {\r\n        console.log(\"beide leer / nur whitespaces\");\r\n\r\n\r\n        if(this.confirmpw .replace(/\\s/g, '').length == 0) {\r\n          // invalid, weil nichtmal confirm pw eingegebn wurde\r\n          console.log(\"no conform pw --> invalid (or only not allowed whitespaces)\");\r\n          return;\r\n        }\r\n        else {\r\n          // beide leer, nur confirmation pw eingebgegen --> valid for update\r\n          this.tempUser.password = this.confirmpw;\r\n          console.log(\"confirm pw not empty, PROCEED\");\r\n        }\r\n      }\r\n      else {\r\n        // invalid,\r\n        console.log(\"nur zweites leer\");\r\n        return;\r\n      }\r\n    }\r\n    else {\r\n\r\n      if(this.updateUser.password.replace(/\\s/g, '').length != 0)   {\r\n          console.log(\"beide felder gefüllt\");\r\n\r\n          if(this.updateUser.password == this.checkpw) {\r\n            console.log(\"beide pws matchen\")\r\n\r\n            if(this.confirmpw.replace(/\\s/g, '').length != 0) {\r\n              // valid\r\n                console.log(\"valid, alle necessary felder von pw gefüllt, PROCEED\")\r\n              this.tempUser.password = this.updateUser.password;\r\n            } else {\r\n              // invalid\r\n              console.log(\"beide pw felder gefüllt, aber connfirm pw leer --> invalid\");\r\n              return;\r\n            }\r\n          }\r\n          else {\r\n            // invalid\r\n            console.log(\"beide pws matchen nicht\");\r\n            return;\r\n          }\r\n      }\r\n      else {\r\n        // invalid\r\n        console.log(\"nur erstes pw empty\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    const files: FileList = this.imgUp.nativeElement.files;\r\n\r\n    if (files.length > 1) {\r\n      console.log(\"RETURNED SINCE EMPTYX or TOO LARGE\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", files[0]);\r\n    console.log(files);\r\n    console.log(\"tempUsr bd = \" + this.tempUser.birthDate);\r\n\r\n    this.userService.checkPassoword(this.confirmpw).subscribe(data => {\r\n\r\n      if(data.status != 200) {\r\n        console.log(\"error in trying to check pw\");\r\n        return;\r\n      }\r\n      else {\r\n        // confirm pw was valid\r\n        if(files.length == 1) {\r\n          // if wants new avatar --> upload avatar first and then updateUser\r\n          this.http.post('http://localhost:8080/Webtech2Project/rest/file/avatar', formData).subscribe(res => {\r\n\r\n            if(res.status == 200) {\r\n\r\n              let loc = res.json().location;\r\n              this.tempUser.avatar = loc;\r\n\r\n              // update Usre with avaar\r\n              this.userService.updateUser(this.tempUser).subscribe(data =>  { this.userService.refreshUser(); this.router.navigate(['profile']); });\r\n\r\n            }\r\n            else {\r\n              console.log(\"Settings Component: Res status was other than 200\");\r\n            }\r\n          });\r\n        } else {\r\n          // updateUser with new avatar\r\n          this.userService.updateUser(this.tempUser).subscribe(data => this.userService.refreshUser());\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/settings.component.ts","import { Injectable, OnInit} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class SortService implements OnInit{\r\n\r\n  // 0 = newest\r\n  // 1 = oldest\r\n  // 2 = most popular\r\n  sortOrder : number = 0;\r\n\r\n  ngOnInit()\r\n  {\r\n    this.sortOrder = 0;\r\n  }\r\n\r\n  setSortOrder(n : number) : void {\r\n    this.sortOrder = n;\r\n    console.log(\"Set sort order in SortService to \" + n);\r\n  }\r\n\r\n  getSortOrder() : number  {\r\n    return this.sortOrder;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/sort.service.ts","import { Component, Input } from '@angular/core';\r\nimport { Post } from './post';\r\nimport { PostService } from './postit.service';\r\nimport {SortService} from \"./sort.service\";\r\nimport {FeedService} from \"./feed.service\";\r\n\r\n@Component ({\r\n  selector: 'sortby',\r\n  template: `\t\t\t<div class=\"sortby\">\r\n    <div class=\"sortheading\">\r\n      <i class=\"material-icons\">sort</i> Sort feed\r\n    </div>\r\n    <div class=\"ulersatz\">\r\n      <a href=\"#\">\r\n        <!-- <span class=\"marker\">&nbsp;</span> --><span (click)=\"sortNewest()\">Newest</span>\r\n      </a>\r\n    </div>\r\n    <div class=\"ulersatz\">\r\n      <a href=\"#\">\r\n        <!-- <span class=\"marker\">&nbsp;</span> --><span (click)=\"sortOldest()\">Oldest</span>\r\n      </a>\r\n    </div>\r\n    <div class=\"ulersatz\">\r\n      <a href=\"#\">\r\n        <!-- <span class=\"marker\">&nbsp;</span> --><span (click)=\"sortPopular()\">Most popular</span>\r\n      </a>\r\n    </div>\r\n  </div>\r\n`,\r\n  providers: [PostService]\r\n})\r\n\r\nexport class SortBy {\r\n\r\n  constructor(private postService: PostService, private sortService : SortService, private feedService : FeedService)\r\n  {\r\n  }\r\n\r\n  sortNewest(): void {\r\n    this.sortService.setSortOrder(0);\r\n    this.postService.getSortedByNewest().then(res => {\r\n      this.feedService.resetFeed();\r\n      this.feedService.pushFeedFromSort(res);\r\n    });\r\n  }\r\n\r\n  sortOldest(): void {\r\n    this.sortService.setSortOrder(1);\r\n    this.postService.getSortedByOldest().then(res =>  {\r\n      this.feedService.resetFeed();\r\n      this.feedService.pushFeedFromSort(res);\r\n    });\r\n  }\r\n\r\n  sortPopular(): void {\r\n    this.sortService.setSortOrder(2);\r\n    this.postService.getSortedByPopular().then(res =>  {\r\n        this.feedService.resetFeed();\r\n        this.feedService.pushFeedFromSort(res);\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/sortfeed.component.ts","import { Injectable, OnInit} from '@angular/core';\r\nimport { User } from './user';\r\nimport { Headers, Http, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { of } from 'rxjs/observable/of';\r\nimport 'rxjs/Rx';\r\nimport {Observable} from 'rxjs/Rx';\r\nimport { Subject }    from 'rxjs/Subject';\r\n\r\n\r\n@Injectable()\r\nexport class UserService implements OnInit{\r\n\r\n  updateUserStatus : Subject<boolean> = new Subject<boolean>();\r\n  canCheckRouter : Subject<boolean> = new Subject<boolean>();\r\n\r\n   constructor(private http: Http) { }\r\n\r\n  private url = 'http://localhost:8080/Webtech2Project/rest/userservice/find/';\r\n  isLoggedIn : boolean = false;\r\n\r\n\r\n\r\ntestUser : User = new User();\r\n\r\n  ngOnInit() : void {\r\n\r\n  }\r\n\r\n getUser(id : number) : Promise<User> {\r\n\r\n  return this.http.get(this.url+id)\r\n      .toPromise()\r\n      .then(response =>  response.json().user as User );\r\n }\r\n\r\n check() : any {\r\n\r\n }\r\n\r\n  setUser(u : User) : void {\r\n   this.testUser = u;\r\n   this.isLoggedIn = true;\r\n    this.updateUserStatus.next(true);\r\n  }\r\n\r\n  getGlobalUser() : User {\r\n   return this.testUser;\r\n  }\r\n\r\n  logOut() : any {\r\n    let body = '';\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    console.log(\"wub\");\r\n     return this.http.post('http://localhost:8080/Webtech2Project/rest/login/logout',body, options);\r\n\r\n\r\n  }\r\n  setToLoggedOut() : void {\r\n    this.testUser = new User();\r\n    this.isLoggedIn = false;\r\n    this.updateUserStatus.next(true);\r\n  }\r\n\r\n  createUser(tempUser : User ) : any {\r\n    console.log(\"Create user called\");\r\n    let d = new Date(tempUser.birthDate);\r\n    let t = d.getTime();\r\n    console.log(\"t; \" + t);\r\n    let body = ' {\"user\":{\"id\":-1,\"avatar\":\"/colab/resources/avatar/default.jpg\",\"birthDate\":' + t + ',\"email\":\"' + tempUser.email + '\",\"fax\":\"' + tempUser.fax + '\",\"gender\":\"'+ tempUser.gender + '\",\"location\":\"' +  tempUser.location + '\",\"name\":\"' + tempUser.name+ '\",\"password\":\"' + tempUser.password + '\",\"phone\":\"' + tempUser.phone + '\",\"registerDate\":0,\"surname\":\"' +  tempUser.surname + '\",\"postits\":[],\"position\":3}}';\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    console.log(\"create user : body : \" + body);\r\n   return this.http.post('http://localhost:8080/Webtech2Project/rest/userservice/create_by_json',body, options);\r\n\r\n\r\n    // {\"user\":{\"id\":2,\"avatar\":\"https://randomuser.me/api/portraits/men/14.jpg\",\"birthDate\":1500242400000,\"email\":\"nicolas.lavigne@example.com\",\"fax\":\"284-484-5005\",\"gender\":\"male\",\"location\":\"stratford\",\"name\":\"nicolas\",\"password\":null,\"phone\":\"647-028-3924\",\"registerDate\":1500310302217,\"surname\":\"lavigne\",\"postits\":[],\"position\":3}}\r\n  }\r\n\r\n  checkPassoword(pw : string) : any{\r\n   let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let body =  ' {\"user\":{\"id\":-1,\"avatar\":\"a\",\"birthDate\":0,\"email\":\"a\",\"fax\":\"a\",\"gender\":\"a\",\"location\":\"a\",\"name\":\"a\",\"password\":\"' + pw + '\",\"phone\":\"a\",\"registerDate\":0,\"surname\":\"a\",\"postits\":[],\"position\":3}} ';\r\n    return this.http.post('http://localhost:8080/Webtech2Project/rest/userservice/check_password',body, options);\r\n  }\r\n\r\n  updateUser(tempUser : User) : any {\r\n    console.log(\"Create user called\");\r\n   // let d = new Date(tempUser.birthDate);\r\n   //  let t = d.getTime();\r\n    let d = new Date(tempUser.birthDate);\r\n    let t = d.getTime();\r\n    console.log(\"tempUser bday =  \" + tempUser.birthDate);\r\n    let body = ' {\"user\":{\"id\":-1,\"avatar\":\"' + tempUser.avatar + '\",\"birthDate\":' + t + ',\"email\":\"' + tempUser.email + '\",\"fax\":\"' + tempUser.fax + '\",\"gender\":\"'+ tempUser.gender + '\",\"location\":\"' +  tempUser.location + '\",\"name\":\"' + tempUser.name+ '\",\"password\":\"' + tempUser.password + '\",\"phone\":\"' + tempUser.phone + '\",\"registerDate\":0,\"surname\":\"' +  tempUser.surname + '\",\"postits\":[],\"position\":3}}';\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    console.log(\"create user : body : \" + body);\r\n    return this.http.post('http://localhost:8080/Webtech2Project/rest/userservice/update/'+tempUser.id,body, options);\r\n  }\r\n\r\n  refreshUser() : void {\r\n    this.http.get('http://localhost:8080/Webtech2Project/rest/userservice/find_mail/'+this.testUser.email).subscribe( res => {\r\n      this.testUser = res.json().user;\r\n      this.updateUserStatus.next(true);\r\n    })\r\n  }\r\n  decrement() : void {\r\n  this.testUser.postit_count = this.testUser.postit_count - 1;\r\n    this.updateUserStatus.next(true);\r\n\r\n}\r\n\r\nsetToTrue() : void  {\r\n    this.isLoggedIn = true;\r\n}\r\n\r\n  setToFalse() : void  {\r\n    this.isLoggedIn = false;\r\n  }\r\n  callUpdate() : void{\r\n    this.updateUserStatus.next(true);\r\n  }\r\n\r\n  increment() : void {\r\n    this.testUser.postit_count = this.testUser.postit_count + 1;\r\n    this.updateUserStatus.next(true);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/user.service.ts","export class User {\r\n  id: number;\r\n  avatar: string;\r\n  birthDate: number;\r\n  email: string;\r\n  fax: string;\r\n  gender: string;\r\n  location: string;\r\n  name: string;\r\n  password: any;\r\n  phone: string;\r\n  register_date: number;\r\n  surname:string;\r\n  postits: any[];\r\n  position: number;\r\n  postit_count: number;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/app/user.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.5/colab/src/main.ts"],"sourceRoot":""}