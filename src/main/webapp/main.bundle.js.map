{"version":3,"sources":["webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src async","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/answer.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/app.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/app.module.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/choice.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/edit.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/mainpage.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/nav.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/post.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/postit.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/postit.service.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/profile.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/profilebadge.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/sortfeed.component.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/user.service.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/user.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/environments/environment.ts","webpack:///C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { Component, Input } from '@angular/core';\r\nimport { Post } from './post';\r\n\r\n@Component\r\n({ selector: 'answer',\r\n    template: `<div class=\"content answer\">\r\n                 <div class=\"flexcol\">\r\n                   <div class=\"flexrow\" >\r\n                     <div class=\"flexcol\" style=\"flex-basis: 8%\">\r\n                       <div class=\"item stats\">\r\n                         <img src=\"pic.jpg\" class=\"feedpic\">\r\n                           <div class=\"text\">\r\n                             <ul class=\"ulstat\">\r\n                               <li>Likes</li>\r\n                               <li>{{data.clicks}}w</li>\r\n                             </ul>\r\n                            </div>\r\n                        </div>\r\n                     </div>                     \r\n                     <div class=\"item_2 flexcol\">\r\n                        <div class=\"item\">\r\n                           <h1> {{data.title}} </h1>\r\n                              {{data.content_text}} \r\n                        </div>\r\n                            <br>\r\n                             <span class=\"created\">Created: 02.06.2017 17:31 Last modified: 03.06.2017 11:30</span>\r\n                        </div>\r\n                     <div class=\"item_4 symbols\">\r\n                        <a href=\"#\" class=\"nounder\" (click)=\"editPost()\">\r\n                          <i class=\"material-icons\">create</i>\r\n                        </a>\r\n                        <br>\r\n                        <br>\r\n                        <a href=\"#\" class=\"nounder\" (click)=\"deletePost()\">\r\n                          <i class=\"material-icons\">clear</i>\r\n                        </a>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n                </div> `\r\n})\r\n\r\nexport class AnswerComponent {\r\n@Input() data : Post;\r\n\r\n  editPost(): void {\r\n\r\n  }\r\n\r\n  deletePost(): void {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/answer.component.ts","import { Component, OnInit, Input} from '@angular/core';\nimport { AnswerComponent } from './answer.component';\nimport { NavbarComponent } from './nav.component';\nimport { ProfileBadge } from './profilebadge.component';\nimport {Post} from './post';\nimport { ProfileBadgeData } from './profilebadge';\nimport { User } from './user';\nimport { UserService } from './user.service';\nimport {FormsModule} from \"@angular/forms\";\nimport { ChoiceComponent } from './choice.component';\n\nconst Test : number = 1;\n\n@Component({\n  selector: 'app-root',\n  template: `    <navbar> </navbar>\n   <router-outlet></router-outlet>\n  `,\n})\nexport class AppComponent implements OnInit {\n  title = 'CoLAB';\n  testUser : User;\n  testUser2: User;\n\n  tempNewPost : Post = new Post();\n\n\n  constructor(private userService: UserService)\n  { }\n\n  profbadge: ProfileBadgeData = {\n   amountposts: 1\n  };\n\n\n  ngOnInit(): void {\n\n  }\n\n\n  private handleError(error: any): Promise<any> {\n    console.error('Fehleeeer', error); // for demo purposes onlyg\n    return Promise.reject(error.message || error);\n  }\n\n  private setGlobalUser(u : User) : void {\n      this.userService.setUser(u);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PostComponent } from './postit.component';\nimport { AnswerComponent } from './answer.component';\nimport { NavbarComponent } from './nav.component';\nimport { ProfileBadge } from './profilebadge.component';\nimport { SortBy } from './sortfeed.component';\nimport { Post } from './post';\nimport { HttpModule }    from '@angular/http';\nimport { UserService } from './user.service';\nimport {TestComponent} from \"./test.component\";\nimport {EditComponent } from './edit.component';\nimport {FormsModule} from \"@angular/forms\";\nimport { ChoiceComponent } from './choice.component';\nimport { AppRoutingModule }     from './app-routing.module';\nimport { MainpageComponent } from './mainpage.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProfileComponent } from './profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    ChoiceComponent,\n    AnswerComponent,\n    NavbarComponent,\n    ProfileBadge,\n    SortBy,\n    EditComponent,\n    MainpageComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n\n    // TODO Settings, Logout, 404, Login form\n    RouterModule.forRoot([\n      {\n        path: '', component: MainpageComponent\n      },\n      {\n        path: 'profile/:id',\n        component: ProfileComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      }\n    ])\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/app.module.ts","import {Component, Input, OnInit, ViewChild, Output, EventEmitter, AfterViewInit, OnChanges} from '@angular/core';\r\nimport { Post } from './post';\r\nimport { PostService } from './postit.service';\r\nimport {PostComponent} from \"./postit.component\";\r\n\r\n@Component\r\n({ selector: 'choice',\r\n  template: `    \r\n    \r\n    <div *ngIf=\"isNewPost === true\">\r\n        <div *ngIf=\"type == 0\">\r\n            <div (click)=\"writeText($event)\">\r\n                Write a text  \r\n            </div>\r\n          <div (click)=\"uploadImage($event)\">\r\n            Or upload an image!\r\n          </div>\r\n          \r\n        </div>\r\n        \r\n        <div *ngIf=\"type == 1\">\r\n          <form (ngSubmit)=\"sendWithText()\" (click)=\"testLog()\">\r\n          <textarea [(ngModel)]=\"tempNewPost.title\" name=\"why\" class=\"materialize-textarea\" placeholder=\"Give your post a title!\"></textarea>\r\n          <textarea [(ngModel)]=\"tempNewPost.contentText\" name=\"why2\" class=\"materialize-textarea\" placeholder=\"Give your post some content!\"></textarea>\r\n          <input type=\"submit\" class=\"btn\" value=\"Post\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Go back\" (click)=\"goBack()\">\r\n    \r\n          </form>\r\n        </div>\r\n        <div *ngIf=\"type == 2\">\r\n          <form (ngSubmit)=\"sendWithImage()\" enctype=\"multipart/form-data\"> \r\n          <textarea [(ngModel)]=\"tempNewPost.title\" name=\"why\" class=\"materialize-textarea\" placeholder=\"Give your post a title!\"></textarea>\r\n          <br> Upload your image! <br> <br>    \r\n          <input type=\"file\" #imgUpload accept=\"image/*\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Post\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Go back\" (click)=\"goBack($event)\">\r\n          </form>\r\n        </div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"isNewPost === false\">\r\n      <!--Aufpassen mit type: Bearbeiten eines Posts hat nur 2 Types, img und text\r\n       Deshalb; Hier OnInit MEthode, die guckt welcher der Inputs leer ist und welcher nicht -->\r\n      <div *ngIf=\"type == 1\">\r\n        <div (click)=\"editModeText($event)\">\r\n          Edit text\r\n        </div>\r\n        <div (click)=\"editModeImage($event)\">\r\n          Replace your text with an image!\r\n        </div>\r\n        <div (click)=\"cancel($event)\"> Cancel edit\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"type == 2\">\r\n        <div (click)=\"editModeImage($event)\">\r\n          Choose a different image to upload\r\n        </div>\r\n        <div (click)=\"editModeText($event)\">\r\n          Replace your image with a text\r\n        </div>\r\n        <div (click)=\"cancel($event)\"> Cancel edit\r\n        </div>\r\n      </div>\r\n      \r\n      <div *ngIf=\"type == 3\">\r\n        <form (ngSubmit)=\"updateText()\">\r\n          <textarea [(ngModel)]=\"tempNewPost.title\" name=\"why\" class=\"materialize-textarea\"></textarea>\r\n          <textarea [(ngModel)]=\"tempNewPost.contentText\" name=\"why2\" class=\"materialize-textarea\" ></textarea>\r\n          <input type=\"submit\" class=\"btn\" value=\"Post\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Go back\" (click)=\"goBack_2($event)\">\r\n        </form>        \r\n      </div>\r\n\r\n      <div *ngIf=\"type == 4\">\r\n        <form (ngSubmit)=\"updateImage()\" enctype=\"multipart/form-data\">\r\n          <textarea [(ngModel)]=\"tempNewPost.title\" name=\"why\" class=\"materialize-textarea\"></textarea>\r\n          <br> Upload your new image! <br> <br>\r\n          <input type=\"file\" #imgUpload accept=\"image/*\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Post\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Go back\" (click)=\"goBack_2($event)\">\r\n        </form>\r\n      </div>\r\n      \r\n      <div *ngIf=\"type == 5\">\r\n        <div (click)=\"replyText($event)\">\r\n          Reply with text\r\n        </div>\r\n        <div (click)=\"replyImage($event)\">\r\n          Reply with an image instead!\r\n        </div>\r\n        <div (click)=\"cancelReply($event)\"> Cancel edit\r\n        </div>        \r\n      </div>\r\n\r\n      <div *ngIf=\"type == 6\">\r\n        <form (ngSubmit)=\"postReplyText()\">\r\n          <textarea [(ngModel)]=\"tempNewPost.title\" name=\"why\" class=\"materialize-textarea\"></textarea>\r\n          <textarea [(ngModel)]=\"tempNewPost.contentText\" name=\"why2\" class=\"materialize-textarea\" ></textarea>\r\n          <input type=\"submit\" class=\"btn\" value=\"Post\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Go back\" (click)=\"goBack_2($event)\">\r\n        </form>\r\n      </div>\r\n\r\n      <div *ngIf=\"type == 7\">\r\n        <form (ngSubmit)=\"postReplyImage()\">\r\n          <br> Upload your new image! <br> <br>\r\n          <input type=\"file\" #imgUpload accept=\"image/*\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Post\">\r\n          <input type=\"submit\" class=\"btn\" value=\"Go back\" (click)=\"goBack_2($event)\">\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n    \r\n  `,\r\n  providers: [PostService]\r\n})\r\n\r\nexport class ChoiceComponent implements OnInit{\r\n  @ViewChild('imgUpload') imgUp\r\n  @Output() onFinished = new EventEmitter<boolean>();\r\n  @Output() editMode = new EventEmitter<boolean>();\r\n  @Output() endReply = new EventEmitter<boolean>();\r\n  @Input() isNewPost : boolean;\r\n  @Input() selPost : Post;\r\n  @Input() fp : Post[];\r\n  @Input() topLevelPost : Post;\r\n\r\n  // 0 = NOT DECIDED YET\r\n  // 1 = TITLE & TEXT\r\n  // 2 = TITLE & IMAGE\r\n  // 3 = Edit Reply Text\r\n  // 4 = Edit Reply Image\r\n  // 5 = New Answer\r\n  // 6 = Reply Text\r\n  // 7 = Reply IMage\r\n  type : number = 0;\r\n  tempNewPost : Post;\r\n\r\n  test(ev: any) {\r\n    console.log(\"Edite clicked\");\r\n    ev.stopPropagation();\r\n  }\r\n\r\n   /* ngOnChanges() : void {\r\n    this.calculateType();\r\n  } */\r\n\r\n\r\n  ngOnInit() : void{\r\n    console.log(\"INIT CHOICE with \" + this.isNewPost);\r\n\r\n    this.calculateType();\r\n    this.tempNewPost = Object.assign({}, this.selPost);\r\n}\r\n\r\n  constructor(private postService: PostService) {\r\n\r\n  }\r\n  //  https://plnkr.co/edit/eB1CiS87hSmxEnDKZMwv?p=preview\r\n  // Mozilla API zu FormData\r\n  // Alle ELemente (ist hier nur 1)  aus FileList in FormData packen, die dann posten für image\r\n\r\n  // TODO Popup falls was schiefgeht bzw handleError mit Popup einbauen\r\n  sendWithText() : void {\r\n    let res: any;\r\n    console.log(\"tempnewpost before sending\"  + this.tempNewPost.title + \" --- \" + this.tempNewPost.contentText);\r\n    res = this.postService.createPostText(this.tempNewPost).subscribe(data => this.reset(), error => this.handleError());\r\n    console.log(res);\r\n    this.reset();\r\n  }\r\n\r\n  editModeText(ev: any) {\r\n    this.type = 3;\r\n    this.editMode.emit(true);\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  replyText(ev : any) {\r\n    this.type = 6;\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  replyImage(ev : any) {\r\n    this.type = 7;\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  cancelReply() : void {\r\n    this.endReply.emit(true);\r\n  }\r\n\r\n  testLog( ) {\r\n    console.log(\"Click inside form registered\");\r\n  }\r\n\r\n  editModeImage(ev: any) {\r\n    this.type = 4;\r\n    this.editMode.emit(true);\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  sendWithImage() {\r\n    const files: FileList = this.imgUp.nativeElement.files;\r\n\r\n    if (files.length === 0) {\r\n      console.log(\"RETURNED SINCE EMPTYX\");\r\n      return;\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append(files[0].name, files[0]);\r\n    console.log(files);\r\n\r\n    this.postService.createPostImage(formData, this.tempNewPost.title)\r\n      .subscribe(data => this.reset(), error => this.handleError());\r\n    this.reset();\r\n  }\r\n\r\n\r\n  updateText() {\r\n    console.log(\"Selected post is  \" + this.selPost.title + \" --- \" + this.selPost.contentText);\r\n    this.postService.updatePostText(this.selPost.id, this.tempNewPost).subscribe(data => this.updateAffected(data));\r\n    this.reset();\r\n    this.cancel(new Event(\"egal\"));\r\n  }\r\n\r\n  updateImage() {\r\n    this.reset();\r\n    this.cancel(new Event(\"egal\"));\r\n  }\r\n\r\n  // TODO ANzeige bug fixen\r\n\r\n  updateAffected(data: any) {\r\n    if(data.status == 200 || data.status == 201) {\r\n      console.log(\"response was ok\");\r\n      console.log(\"Array length : \"+ this.fp.length);\r\n\r\n      let ind = this.fp.indexOf(this.selPost,0);\r\n\r\n      // get by id and then set to post ion array\r\n      this.postService.getById(this.tempNewPost.id).then(\r\n        res => {\r\n          if(res.status == 200) {\r\n            console.log((\"0: Index\" + ind));\r\n            console.log(\"1 : \" + this.fp[ind].title);\r\n            res = res.json().postit as Post;\r\n            console.log(\"RES SHOULD BE JSON NOW : \" +  res);\r\n            this.fp[ind] = Object.assign({}, res);\r\n            this.type = 100;\r\n            this.fp[ind].isBeingEdited = false;\r\n            this.fp[ind].isTypingReply = false;\r\n            console.log(\"2: \" + this.fp[ind].title) }\r\n\r\n            else {\r\n            console.log(\"update response was not ok\");\r\n            this.handleError();\r\n           }\r\n          }\r\n      );\r\n\r\n\r\n    }else {\r\n      console.log(\"data status was not ok\");\r\n      this.handleError();\r\n    }\r\n  }\r\n\r\n  handleError() {\r\n\r\n  }\r\n\r\n  reset() {\r\n    this.type = 0;\r\n    this.tempNewPost = Object.assign({}, this.selPost);\r\n    this.editMode.emit(false);\r\n    this.emit();\r\n  }\r\n\r\n\r\n  // TODO: Aus der Response muss JSON geparst werden und dann in das entsprechende objekt gepackt werden!\r\n  // Sowohl bei new Post als auch bei new reply\r\n  // dafür von auf chris warten (hab ID ja vorher nicht)\r\n  postReplyText()  {\r\n    this.postService.createReplyText(this.tempNewPost, this.topLevelPost).subscribe(data => this.updateAffected(data));\r\n    this.reset();\r\n  }\r\n\r\n  postReplyImage() {\r\n\r\n  }\r\n\r\n  goBack(ev: any) {\r\n    this.reset();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  goBack_2(ev:any) {\r\n      this.calculateType();\r\n    this.tempNewPost = Object.assign({}, this.selPost);\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  cancel(ev: any) : void {\r\n    this.type = 0;\r\n    this.editMode.emit(false);\r\n    this.selPost.isBeingEdited = false;\r\n    this.selPost.isTypingReply = false;\r\n    console.log(\"Cancel edit; Edit property of \" + this.selPost.title + \" is now set to \" + this.selPost.isBeingEdited);\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  writeText(ev: any) {\r\n    this.editMode.emit(true);\r\n    this.type = 1;\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  uploadImage(ev: any) {\r\n    this.editMode.emit(true);\r\n    this.type = 2;\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  emit() : void {\r\n    this.onFinished.emit(true);\r\n  }\r\n\r\n  calculateType()  {\r\n    if(this.isNewPost) {\r\n      console.log(\"New post\");\r\n      this.type = 0;\r\n    }\r\n    // Not a new post --> edit mode\r\n    else {\r\n      // check if post was passed\r\n      if(this.selPost === null) {\r\n        this.handleError();\r\n      }else {\r\n        if(this.selPost.isTypingReply == true) {\r\n          this.type = 5;\r\n          console.log(\"author == null\");\r\n          console.log(\"should be a new reply without yet an author\");\r\n        } else {\r\n          console.log(\"AUTHOR NOT NULL!!\");\r\n            // Post was passed --> check if post contained image or not\r\n            if(this.selPost.contentImage === null) {\r\n              this.type = 1;\r\n              console.log(\"IMG = NULL\");\r\n              console.log(\"ContentIMG undefined, should be text\");\r\n            }\r\n            else {\r\n              console.log(\"NTEXT = NULL\");\r\n              console.log(\"THIS ; \" + this.selPost.author);\r\n              this.type = 2;\r\n              console.log(\"ContentImg defined, shold be IMG\");\r\n            }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/choice.component.ts","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Post } from './post'\r\nimport {isNullOrUndefined} from \"util\";\r\n\r\n@Component\r\n({ selector: 'edit',\r\n  template: `\r\n   <div *ngIf=\"type == 1\">\r\n     <div>\r\n       Edit text\r\n     </div>\r\n     <div>\r\n       Replace your text with an image!\r\n     </div>\r\n     <div> Cancel edit\r\n     </div>\r\n   </div>\r\n   \r\n   <div *ngIf=\"type == 2\">\r\n      <div>\r\n        Choose a different image to upload\r\n      </div>\r\n      <div>\r\n        Replace your image with a text\r\n      </div>\r\n      <div> Cancel edit\r\n      </div>\r\n   </div> \r\n \t\r\n  `\r\n})\r\n\r\nexport class EditComponent implements OnInit {\r\n  @Input() selPost : Post;\r\n\r\n  // Content of choice component depends on the current content of the post\r\n  // 1 = TEXT\r\n  // 2 = IMAGE\r\n  type : number;\r\n  tempNewPost : Post = new Post();\r\n\r\n  ngOnInit() : void {\r\n    if (this.selPost.contentImage === null) {\r\n      this.type = 1;\r\n      console.log(\"ContentIMG undefined, should be text\");\r\n    }\r\n    else {\r\n      this.type = 2;\r\n      console.log(\"ContentImg defined, shold be IMG\");\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/edit.component.ts","import { Component, OnInit} from '@angular/core';\r\nimport { ProfileBadgeData } from './profilebadge';\r\nimport { Post } from './post';\r\n\r\n@Component({\r\n  selector: 'mainpage',\r\n  template: `   <main>\r\n    <div class=\"col_1\">\r\n      <profileBadge>\r\n      </profileBadge>\r\n    </div>\r\n    <div class=\"col_2\">\r\n      <h2>Das ist ein Test: </h2>\r\n      <div class=\"formdiv\">\r\n        <choice [isNewPost]=\"true\">\r\n        </choice>\r\n      </div>\r\n      <h2 class=\"morespace\">See what everyone in your company is up to!</h2>\r\n\r\n      <post [feedPosts]=\"feedPosts\" [repliesForCurrent]=\"repliesForCurrent\"></post>\r\n    </div>\r\n\r\n    <div class=\"col_3\">\r\n      <sortby></sortby>\r\n    </div>\r\n  </main>\r\n  `\r\n\r\n})\r\nexport class MainpageComponent implements OnInit {\r\n  title = 'CoLAB';\r\n  feedPosts : Post[] = [];\r\n  repliesForCurrent : Post[] = [];\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/mainpage.component.ts","import { Component } from '@angular/core';\r\n\r\n@Component\r\n({ selector: 'navbar',\r\n   template: `<div class=\"navbar\">\r\n                <nav>\r\n                  <ul class=\"navul\">\r\n                     <li class=\"mmenu midmenu\" routerLink=\"/profile\"> <i class=\"material-icons\">account_circle</i><span class=\"atest\">PROFILE</span></li>\r\n                     <li class=\"mmenu midmenu\" routerLink=\"/settings\"><i class=\"material-icons\">build</i><span class=\"atest\">SETTINGS</span></li>\r\n                     <li class=\"mmenu colab\" routerLink=\"\" ><span class=\"co\"><i class=\"material-icons\">keyboard_arrow_right</i>Co</span><span class=\"lab\">LAB<i class=\"material-icons\">keyboard_arrow_left</i></span></li>\r\n                     <li class=\"mmenu midmenu\" routerLink=\"/logout\"><i class=\"material-icons\">power_settings_new</i><span class=\"atest\">SIGN OUT</span></li>\r\n                     <li class=\"mmenu midmenu searchbar\">                       \r\n                       <form action=\"#\">\r\n                           <input type=\"search\" name=\"search\" class=\"mainsearch\" placeholder=\"Search for things\">\r\n                       </form>\r\n                    </li>\r\n                  </ul>\r\n                </nav>\r\n                </div>\r\n   `\r\n})\r\n\r\nexport class NavbarComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/nav.component.ts","export class Post {\r\n  id: number;\r\n  answers: number;\r\n  clicks: number;\r\n  contentImage: any;\r\n  contentText: string;\r\n  date: number;\r\n  isPost: number;\r\n  lastModified: number;\r\n  responseTo: number;\r\n  title: string;\r\n  author: number;\r\n  repliesVisible: boolean = false;\r\n  isBeingEdited : boolean = false;\r\n  isTypingReply : boolean;\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/post.ts","import { Component, Input, OnInit, AfterViewInit, ViewChild, ComponentFactoryResolver, ViewContainerRef} from '@angular/core';\r\nimport { Post } from './post';\r\nimport {Answer} from \"./answer\";\r\nimport { TestComponent } from './test.component';\r\nimport { PostService } from './postit.service';\r\nimport { PostDirective } from './post.directive';\r\nimport { ChoiceComponent }  from './choice.component';\r\nimport {isNullOrUndefined} from \"util\";\r\n\r\n// IN MODULE AUSLAGERN\r\n\r\n\r\n@Component\r\n({\r\n\r\n  selector: 'post',\r\n  template: `    <!-- TODO Eventuell Style wegen Umrandung und Markierung welcher selected ist anpassen\r\n        Jquery In Angular: https://stackoverflow.com/questions/30623825/how-to-use-jquery-with-angular2\r\n        Scrollen mit Jquery: https://stackoverflow.com/questions/6677035/jquery-scroll-to-element\r\n     -->\r\n \r\n      <div *ngFor=\"let current of feedPosts\" (click)=\"onSelect(current, $event)\" > <!-- [class.selected]=\"current === selectedPost\"-->\r\n      <div class=\"content\" >\r\n    <div class=\"flexcol\">\r\n      <div class=\"flexrow\">\r\n        <div class=\"item stats\">\r\n          <span class=\"markertest\">\r\n            \r\n          </span>\r\n          <img class=\"feedpic\" src=\"kermit.jpg\">\r\n\r\n          <div class=\"text\">\r\n            <ul class=\"ulstat\">\r\n              <li>Likes: TODO </li>\r\n              <li>Replies: TODO {{current.answers}}</li>\r\n              <li>Views: TODO {{current.clicks}}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"item_2 flexcol\">\r\n         <div *ngIf=\"current.isBeingEdited == true\">\r\n           <choice [fp]=\"feedPosts\" [selPost] = \"selectedPost\" [isNewPost]=\"false\">                 \r\n                </choice>\r\n         </div>\r\n        <div *ngIf=\"current.isBeingEdited == false\"> \r\n          <div *ngIf=\"!current.contentImage\"> \r\n             <div class=\"item\">\r\n                 <h1>{{current.title}}</h1>\r\n             </div>\r\n            <br>\r\n            {{current.contentText}}\r\n          </div>\r\n\r\n          <div *ngIf=\"!current.contentText\">\r\n            <div class=\"item\">\r\n              <h1>{{current.title}}</h1>\r\n            </div>\r\n            <br>\r\n            TODO: ADD INAGE (POSTITCOMPONENT)\r\n          </div>\r\n          <span class=\"created\"> Created: {{current.date}} Last modified: {{current.lmod}} </span>\r\n          </div>          \r\n       </div> \r\n        <div class=\"item_4 symbols\">\r\n          <a href=\"#\" class=\"nounder\" (click)=\"editPost(current,$event)\">\r\n            <i class=\"material-icons\">create</i>\r\n          </a>\r\n          <br>\r\n          <br>\r\n          <a href=\"#\" class=\"nounder\" (click)=\"deletePost(current, $event)\">\r\n            <i class=\"material-icons\">clear</i>\r\n          </a>\r\n          <br>\r\n          <br>\r\n          <a href=\"#\" class=\"nounder\" (click)=\"reply(current, $event)\">\r\n            <i class=\"material-icons\">reply</i>\r\n          </a>\r\n        </div>\r\n    </div>\r\n  </div>\r\n       <div *ngFor=\"let answers of repliesForCurrent\" (click)=\"onSelectAnswer(current, $event)\">\r\n         <div *ngIf=\"current.repliesVisible\">\r\n           <div class=\"content answer\" style=\"background-color: green;\">\r\n             <div class=\"flexcol\">\r\n               <div class=\"flexrow\" >\r\n                 <div class=\"flexcol\" style=\"flex-basis: 8%\">\r\n                   <div class=\"item stats\">\r\n                     <img src=\"pic.jpg\" class=\"feedpic\">\r\n                     <div class=\"text\">\r\n                       <ul class=\"ulstat\">\r\n                         <li>Likes</li>\r\n                         <li>{{answers.clicks}}</li>\r\n                       </ul>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n                 <div class=\"item_2 flexcol\">\r\n                   <div class=\"item\">\r\n                     <div *ngIf=\"answers.isBeingEdited == true\">\r\n                       <choice [fp]=\"repliesForCurrent\" [selPost] = \"answers\" [isNewPost]=\"false\">\r\n                       </choice>\r\n                     </div>                     \r\n                     <div *ngIf=\"answers.isBeingEdited == false\">\r\n                       <div *ngIf=\"answers.isTypingReply == true\">\r\n                         <choice (endReply)=\"cancelReply(answers)\" [topLevelPost]=\"current\" [fp]=\"repliesForCurrent\" [selPost] = \"answers\" [isNewPost]=\"false\">\r\n                         </choice>\r\n                       </div>\r\n                       <div *ngIf=\"answers.isTypingReply == false \">\r\n                        <div *ngIf=\"!answers.contentImage\">\r\n                         <h1> {{answers.title}} </h1>\r\n                         {{answers.contentText}}\r\n                        </div>\r\n                         <div *ngIf=\"!answers.contentText\">\r\n                           <h1> {{answers.title}} </h1>\r\n                           TODO: ADD IMAGE (POSTITCOMPONENT)\r\n                         </div>\r\n                       </div>                       \r\n                   </div>\r\n                   <br>\r\n                   <span class=\"created\">Created: {{answers.date}} Last modified: {{answers.lastModified}}</span>\r\n                 </div>\r\n                 </div>\r\n                 <div class=\"item_4 symbols\">\r\n                   <a href=\"#\" class=\"nounder\" (click)=\"editAnswer(answers, $event)\">\r\n                     <i class=\"material-icons\">create</i>\r\n                   </a>\r\n                   <br>\r\n                   <br>\r\n                   <a href=\"#\" class=\"nounder\" (click)=\"deletePost(answers, $event)\">\r\n                     <i class=\"material-icons\">clear</i>\r\n                   </a>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n           </div>\r\n           \r\n         </div>\r\n         \r\n       </div>\r\n        \r\n      </div>\r\n    </div>\r\n  `,\r\n  providers: [PostService]\r\n})\r\n\r\n\r\nexport class PostComponent implements  OnInit\r\n{\r\n\r\n  @Input() feedPosts : Post[];\r\n  @Input() repliesForCurrent\r\n  title = 'CoLAB';\r\n\r\n  testPost : Post[];\r\n\r\n  // -------------------\r\n // feedPosts : Post[];\r\n // repliesForCurrent : Post[];\r\n  editedPost : Post;\r\n  // -------------------\r\n  singlePost : Post;\r\n  tP : Post[];\r\n  tP2: Post[];\r\n  editMode : boolean = false;\r\n\r\n  selectedPost : Post;\r\n  selectedAnswer : Post;\r\n\r\n  constructor(private postService: PostService)\r\n  {\r\n\r\n\r\n  }\r\n\r\n  // TODO DELETE, USER, RELOAD FIXEWN\r\n\r\n  onSelectAnswer(selected : Post, ev : any ) {\r\n    this.selectedAnswer = selected;\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    console.log(\"OnINIT for PostItComponent was called\");\r\n    this.postService.getAllPosts().then(res => {\r\n        // this.feedPosts = res;\r\n        this.feedPosts = [];\r\n\r\n        console.log(\"res was : \" + res.toString());\r\n\r\n        for (let elem of res) {\r\n          console.log(\"Current element in for loop : \" +  elem);\r\n          // add to feedPosts if element is post\r\n          if (elem.isPost === 0) {\r\n            console.log(\"Current element \" + elem.id + \" is Post \");\r\n            let len = this.feedPosts.push(elem);\r\n            console.log(\"AL Length after push: \" +  this.feedPosts.length);\r\n\r\n            this.feedPosts[len-1].repliesVisible = false;\r\n            this.feedPosts[len-1].isBeingEdited = false;\r\n            this.feedPosts[len-1].isTypingReply = false;\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  cancelReply(post : Post) : void {\r\n    post.isTypingReply = false;\r\n    // temporarily added element can be deleted now as user chose to cancel editing\r\n    this.repliesForCurrent.shift();\r\n\r\n  }\r\n\r\n  //TODO Answer in eigene Component lagern, die dann dynamically GEADDET WIRD\r\n  //DADURCH DANN HOFFENTLICH KEIN RERENDER MEHR!\r\n  // https://angular.io/guide/dynamic-component-loader#dynamic-component-loading\r\n  // https://medium.com/tixdo-labs/angular-2-dynamic-component-loader-752c3235bf9\r\n\r\n  onSelect(selected : Post, ev: any): void {\r\nev.stopPropagation();\r\n    this.repliesForCurrent = [];\r\n    if (this.selectedPost === selected) {\r\n      // if is already showing replies --> hide\r\n      if (this.selectedPost.repliesVisible) {\r\n        this.selectedPost.repliesVisible = false;\r\n      }\r\n      // else: fetch & show replies\r\n      else {\r\n        this.selectedPost.repliesVisible = true;\r\n        // fetch replies\r\n        this.postService.getRepliesTo(selected.id).then(res => {\r\n          for (let elem of res) {\r\n\r\n            // add to feedPosts if element is answer / responseTo\r\n            if (elem.isPost === 1) {\r\n             // console.log(\"Current answer \" + elem.id + \" is answer \");\r\n              let len = this.repliesForCurrent.push(elem);\r\n           //   console.log(\"AL Length after push: \" +  this.repliesForCurrent.length);\r\n\r\n              this.repliesForCurrent[len-1].repliesVisible = false;\r\n              this.repliesForCurrent[len-1].isBeingEdited = false;\r\n              this.repliesForCurrent[len-1].isTypingReply = false;\r\n            }\r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n    else {\r\n      if (this.selectedPost != null) {\r\n        this.selectedPost.repliesVisible = false;\r\n      }\r\n      this.repliesForCurrent = [];\r\n      this.selectedPost = selected;\r\n      this.postService.getRepliesTo(selected.id).then(res => {\r\n        for (let elem of res) {\r\n\r\n          // add to feedPosts if element is post\r\n          if (elem.isPost === 1) {\r\n          //  console.log(\"Current answer \" + elem.id + \" is answer \");\r\n            let len = this.repliesForCurrent.push(elem);\r\n         //   console.log(\"AL Length after push: \" +  this.repliesForCurrent.length);\r\n\r\n            this.repliesForCurrent[len-1].repliesVisible = false;\r\n            this.repliesForCurrent[len-1].isBeingEdited = false;\r\n            this.repliesForCurrent[len-1].isTypingReply = false;\r\n          }\r\n        }\r\n\r\n      });\r\n      this.selectedPost.repliesVisible = true;\r\n    }\r\n  }\r\n\r\n  test(): void {\r\n  //  const factory = this.componentFactoryResolver.resolveComponentFactory(TestComponent);\r\n   // const ref = this.viewContainerRef.createComponent(factory);\r\n  //   ref.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  assignPost(post :Post) : void {\r\n\r\n  }\r\n\r\n  refresh() {\r\n    this.postService.getAllPosts().then(res => {\r\n        // this.feedPosts = res;\r\n        this.feedPosts = [];\r\n\r\n        for (let elem of res) {\r\n\r\n          // add to feedPosts if element is post\r\n          if (elem.isPost === 0) {\r\n            console.log(\"Current element \" + elem.id + \" is Post \");\r\n            let len = this.feedPosts.push(elem);\r\n            console.log(\"AL Length after push: \" +  this.feedPosts.length);\r\n\r\n            this.feedPosts[len-1].repliesVisible = false;\r\n            this.feedPosts[len-1].isBeingEdited = false;\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n\r\n  editAnswer (selected : Post, ev :any) : void {\r\n    console.log(\"Clicked edit answer on \" + selected.title);\r\n    this.selectedAnswer = selected;\r\n    this.editedPost = Object.assign({}, selected);\r\n    ev.stopPropagation();\r\n\r\n    if(selected.isBeingEdited == true) {\r\n      selected.isBeingEdited = false;\r\n    }\r\n    else {\r\n      for (let elem of this.repliesForCurrent) {\r\n        //console.log(\"Compare \" + elem.id + \" to \" + selected.id);\r\n        if (elem === selected) {\r\n          selected.isBeingEdited = true;\r\n       //   console.log(\"IF: Selected being edited = true\");\r\n        }\r\n        else {\r\n          elem.isBeingEdited = false;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  editPost(selected : Post, ev: any ): void {\r\n    // deep copy of post in order to roll back changes if user decides to cancel editing\r\n  this.selectedPost = selected;\r\n    this.editedPost = Object.assign({}, selected);\r\n    ev.stopPropagation();\r\n\r\n   if(this.editMode) {\r\n     this.editMode = false;\r\n   } else {\r\n     this.editMode = true;\r\n   }\r\n\r\n\r\n    if(selected.isBeingEdited == true) {\r\n      selected.isBeingEdited = false;\r\n    }\r\n    else {\r\n      for (let elem of this.feedPosts) {\r\n       // console.log(\"Compare \" + elem.id + \" to \" + selected.id);\r\n        if (elem === selected) {\r\n          selected.isBeingEdited = true;\r\n        //  console.log(\"IF: Selected being edited = true\");\r\n        }\r\n        else {\r\n          elem.isBeingEdited = false;\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    if(selected.isBeingEdited == false) {\r\n      console.log(\"Current.isBeingEdited is now set to false\");\r\n    }\r\n  else {\r\n  console.log(\"Current.isBeingEdited is now set to true\");\r\n}\r\n\r\n  }\r\n\r\n  onSubmitEdit() : void {\r\n    /* selected.isBeingEdited = false; */\r\n  }\r\n\r\n  onCancelEdit() : void {\r\n    /* selected.isBeingEdited = false; */;\r\n  }\r\n\r\n  deletePost(selected : Post, ev : any): void {\r\n    ev.stopPropagation();\r\n    this.postService.deletePost(selected.id).subscribe(data => this.updateFeed(data, selected));\r\n  }\r\n\r\n  // Backup\r\n  /* reply(selected : Post, ev : any): void {\r\n    ev.stopPropagation();\r\n    // if it wasnt selected previously, get replies\r\n    if(selected.repliesVisible == false ){\r\n      this.repliesForCurrent = [];\r\n      console.log(\"For reply: replies were not visible, not set to visible\");\r\n      selected.repliesVisible = true;\r\n      this.postService.getRepliesTo(selected.id).then(res => {\r\n        for (let elem of res) {\r\n\r\n          // add to feedPosts if element is answer / responseTo\r\n          if (elem.isPost === 1) {\r\n           // console.log(\"Current answer \" + elem.id + \" is answer \");\r\n            let len = this.repliesForCurrent.push(elem);\r\n          //  console.log(\"AL Length after push: \" +  this.repliesForCurrent.length);\r\n\r\n            this.repliesForCurrent[len-1].repliesVisible = false;\r\n            this.repliesForCurrent[len-1].isBeingEdited = false;\r\n            this.repliesForCurrent[len-1].isTypingReply = false;\r\n          }\r\n        }\r\n      });\r\n\r\n      console.log(\"Unshift test: Length before : \" + this.repliesForCurrent.length);\r\n      // replies are loaded. shift arreay 1 to right\r\n      this.repliesForCurrent.unshift(new Post());\r\n      this.repliesForCurrent[0].isTypingReply = true;\r\n      console.log(\"0 set to true\");\r\n    }\r\n\r\n    else {\r\n      selected.repliesVisible = false;\r\n    }\r\n\r\n\r\n  } */\r\n\r\n  updateFeed(data: any, element : Post) {\r\n    if(data.status == 200) {\r\n\r\n      // isPost --> delete from feedPosts\r\n      if(element.isPost == 0) {\r\n        console.log(\"Delete Post\");\r\n        let ind = this.feedPosts.indexOf(element);\r\n        this.feedPosts.splice(ind, 1);\r\n      }\r\n      // else: delete from repliesForCurrent\r\n      else {\r\n        console.log(\"Delete reply\");\r\n        let ind = this.repliesForCurrent.indexOf(element);\r\n        this.repliesForCurrent.splice(ind, 1);\r\n      }\r\n    }\r\n    else {\r\n      console.log(\"Error int rying to delete\");\r\n    }\r\n  }\r\n\r\n  reply(selected : Post, ev : any): void {\r\n    ev.stopPropagation();\r\n    // if it wasnt selected previously, get replies\r\n      this.repliesForCurrent = [];\r\n      console.log(\"For reply: replies were not visible, not set to visible\");\r\n      selected.repliesVisible = true;\r\n      this.postService.getRepliesTo(selected.id).then(res => {\r\n        for (let elem of res) {\r\n\r\n          // add to feedPosts if element is answer / responseTo\r\n          if (elem.isPost === 1) {\r\n            // console.log(\"Current answer \" + elem.id + \" is answer \");\r\n            let len = this.repliesForCurrent.push(elem);\r\n            //  console.log(\"AL Length after push: \" +  this.repliesForCurrent.length);\r\n\r\n            this.repliesForCurrent[len-1].repliesVisible = false;\r\n            this.repliesForCurrent[len-1].isBeingEdited = false;\r\n            this.repliesForCurrent[len-1].isTypingReply = false;\r\n          }\r\n        }\r\n      });\r\n\r\n      console.log(\"Unshift test: Length before : \" + this.repliesForCurrent.length);\r\n      // replies are loaded. shift arreay 1 to right\r\n      this.repliesForCurrent.unshift(new Post());\r\n      this.repliesForCurrent[0].isTypingReply = true;\r\n      console.log(\"0 set to true\");\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/postit.component.ts","import { Injectable, Output, EventEmitter } from '@angular/core';\r\nimport { Post } from './post';\r\nimport { Headers, Http, RequestOptions } from '@angular/http';\r\nimport {Observable} from \"rxjs/Observable\";\r\n\r\n\r\n@Injectable()\r\n\r\nexport class PostService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  private url = 'http://localhost:8080/Webtech2Project/rest/postitservice/';\r\n  private headers = new Headers({'Content-Type': 'application/json'});\r\n\r\n  getAllPosts() : Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url + 'fetch_all').\r\n      toPromise().\r\n      then(response => response.json().postit as Post[]);\r\n    }\r\n\r\n    getRepliesTo(id:number): Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url+'responses/'+id).\r\n      toPromise().\r\n      then (response => response.json().postit as Post[]);\r\n    }\r\n\r\n    getById(id:number) : any {\r\n    return this.http.get(this.url+'find/'+id).toPromise();\r\n    }\r\n\r\n    // TODO\r\n  getSortedByNewest(): Promise<Post[]> {\r\n      return this.http.get(\r\n        this.url+'fetchallnewest').\r\n        toPromise().\r\n        then(response => response.json() as Post[]);\r\n    }\r\n\r\n\r\n    // TODO\r\n  getSortedByOldest(): Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url+'fetchalloldest').\r\n      toPromise().\r\n      then(response => response.json() as Post[]);\r\n  }\r\n\r\n  // TODO\r\n  getSortedByPopular(): Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url+'fetchallpopular').\r\n      toPromise().\r\n      then(response => response.json() as Post[]);\r\n  }\r\n\r\n  // TODO\r\n  getAllPostsByUser (id: number) : Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url+'allpostsbyuser/'+id).\r\n      toPromise().\r\n      then(response => response.json() as Post[]);\r\n  }\r\n\r\n  // TODO\r\n  getOnlyRepliesByUser (id: number) : Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url+'repliesbyuser/'+id).\r\n      toPromise().\r\n      then(response => response.json() as Post[]);\r\n  }\r\n\r\n  // TODO\r\n  getOnlyPostsByUser (id: number) : Promise<Post[]> {\r\n    return this.http.get(\r\n      this.url+'postsbyuser/'+id).\r\n      toPromise().\r\n      then(response => response.json() as Post[]);\r\n  }\r\n\r\n  createPostText(internalPost : Post) : any {\r\n    let body = '{ \"postit\":{\"id\":-1,\"answers\":0,\"clicks\":0,\"contentImage\":null,\"contentText\":\"' + internalPost.contentText + '\",\"date\":1498663847000,\"isPost\":0,\"lastModified\":1498663847000,\"responseTo\":0,\"title\":\"' + internalPost.title + '\",\"author\":2}}';\r\n    console.log(\"Stringified post : \" + body);\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    console.log(\"post text method called inside\");\r\n    return this.http.post(this.url+'create_by_json', body, options);\r\n  }\r\n\r\n  // TODO\r\n  createPostImage(payload : any, title: string) : any {\r\n    console.log(\"test: image has a result like : \" + payload);\r\n    let body = '{ \"postit\":{\"id\":-1,\"answers\":0,\"clicks\":0,\"contentImage\":' + payload + ',\"contentText\":null,\"date\":1498663847000,\"isPost\":0,\"lastModified\":1498663847000,\"responseTo\":0,\"title\":\"' + title + '\",\"author\":2}}';\r\n    console.log(\"Stringified post : \" + body);\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    console.log(\"post image method called inside\");\r\n  //  return this.http.post(this.url+'create_by_json', body, options);\r\n    //HIer irgendwo\r\n    console.log(\"calling url:  http://localhost:8080/Webtech2Project/rest/file/avatar\");\r\n    return this.http.post('http://localhost:8080/Webtech2Project/rest/file/avatar', payload);\r\n  }\r\n\r\n\r\n  updatePostText(id: number, internalPost : Post) : any {\r\n    let body = '{ \"postit\":{\"id\":-1,\"answers\":0,\"clicks\":0,\"contentImage\":null,\"contentText\":\"' + internalPost.contentText + '\",\"date\":1498663847000,\"isPost\":0,\"lastModified\":1498663847000,\"responseTo\":0,\"title\":\"' + internalPost.title + '\",\"author\":2}}';\r\n    console.log(\"Stringified post : \" + body + \" --- ID : \" +  id);\r\n    console.log(this.url+'update/'+id);\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    console.log(body + \" +++ \" +  options);\r\n    return this.http.post(\r\n      this.url+'update/'+id, body, options);\r\n  }\r\n\r\n\r\n  // TODO\r\n  updatePostImage(id: number, internalPost : Post) : any {\r\n    let body = '{ \"postit\":{\"id\":-1,\"answers\":0,\"clicks\":0,\"contentImage\":null,\"contentText\":\"' + internalPost.contentText + '\",\"date\":1498663847000,\"isPost\":0,\"lastModified\":1498663847000,\"responseTo\":0,\"title\":\"' + internalPost.title + '\",\"author\":2}}';\r\n    console.log(\"Stringified post : \" + body);\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    return this.http.post(\r\n      this.url+'update/'+id, body, options);\r\n  }\r\n\r\n\r\n  createReplyText(internalPost : Post, parentPost : Post) : any {\r\n      let body = '{ \"postit\":{\"id\":-1,\"answers\":0,\"clicks\":0,\"contentImage\":null,\"contentText\":\"' + internalPost.contentText + '\",\"date\":1498663847000,\"isPost\":1,\"lastModified\":1498663847000,\"responseTo\":' + parentPost.id + ',\"title\":\"' + internalPost.title + '\",\"author\":2}}';\r\n      console.log(\"Stringified post : \" + body);\r\n      let headers = new Headers({ 'Content-Type': 'application/json' });\r\n      let options = new RequestOptions({ headers: headers });\r\n      console.log(\"post text method called inside\");\r\n      return this.http.post(this.url+'create_by_json', body, options);\r\n  }\r\n\r\n  // TODO\r\n  createReplyImage() : any {\r\n\r\n  }\r\n\r\n  deletePost(id: number) : any {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    return this.http.delete(this.url+'delete/'+id, headers);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/postit.service.ts","import { Component, OnInit, Input} from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Location }                 from '@angular/common';\r\nimport { User } from './user';\r\nimport { UserService } from './user.service';\r\nimport {PostService} from \"./postit.service\";\r\nimport {Post} from './post';\r\nimport 'rxjs/add/operator/switchMap';\r\n\r\n\r\n@Component({\r\n  selector: 'profilepage',\r\n  template: `\r\n    <main>\r\n      <div class=\"col_4\">\r\n        <div class=\"infos\">\r\n          <div class=\"avatar\">\r\n            <img src=\"vivalderino.jpg\" class=\"profpicfull\">\r\n          </div>\r\n\r\n          <div class=\"contactinfos\">\r\n            <span class=\"contact\"><i class=\"material-icons\">face</i> {{user.name}}</span>\r\n            <span class=\"contact\"><i class=\"material-icons\">business</i>{{user.location}}</span>\r\n            <span class=\"contact\"><i class=\"material-icons\">phone</i>{{user.phone}}</span>\r\n            <span class=\"contact\"><i class=\"material-icons\">print</i>{{user.fax}}</span>\r\n            <span class=\"contact\"><i class=\"material-icons\">cake</i>{{user.birth_date}}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"sort\">\r\n          <span class=\"sortspan\" (click)=\"showAll()\">Alles anzeigen</span>\r\n          <span class=\"sortspan\" (click)=\"onlyOwnPosts()\">Nur eigene Posts anzeigen</span>\r\n          <span class=\"sortspan\" (click)=\"onlyOwnReplies()\">Nur Antworten anzeigen</span>\r\n        </div>\r\n\r\n        <div *ngFor=\"let posts of profilePosts\">\r\n          <div class=\"results\">\r\n            <div class=\"content\">\r\n              <div class=\"flexcol\">\r\n                <div class=\"flexrow\">\r\n                  <div class=\"item stats\">\r\n                    <img class=\"feedpic\" src=\"kermit.jpg\">\r\n  \r\n                    <div class=\"text\">\r\n                      <ul class=\"ulstat\">\r\n                        <li>Likes: TODO</li>\r\n                        <li>Replies:TODO</li>\r\n                        <li>Views: TODO</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"item_2 flexcol\">\r\n                   <div *ngIf=\"!posts.contentImage\">\r\n                     <div class=\"item\">\r\n                       <h1>{{posts.title}} </h1>\r\n                       {{posts.contentText}}\r\n                       </div>\r\n                   </div>\r\n                    <div *ngIf=\"!posts.contentText\">\r\n                      <div class=\"item\">\r\n                        <h1>{{posts.title}} </h1>\r\n                            TODO: ADD IMAGE SRC (PROFILE COMPONENT)\r\n                      </div>\r\n                    </div>\r\n                    <!--  <div class=\"item lmod\">\r\n                                      Created: 01.06.2017 13:37. Last modified: -\r\n                                  </div> -->\r\n                    <br>\r\n                    <span class=\"created\"> Created: 02.06.2017 17:31 Last modified: - </span>\r\n                  </div>\r\n                 <!-- <div class=\"item_4 symbols\">\r\n                    <a href=\"#\" class=\"nounder\">\r\n                      <i class=\"material-icons\">create</i>\r\n                    </a>\r\n                    <br>\r\n                    <br>\r\n                    <a href=\"#\" class=\"nounder\">\r\n                      <i class=\"material-icons\">clear</i>\r\n                    </a>\r\n                    <br>\r\n                    <br>\r\n                    <a href=\"#\" class=\"nounder\">\r\n                      <i class=\"material-icons\">reply</i>\r\n                    </a>\r\n                  </div> -->\r\n                </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>        \r\n    </main> `,\r\n  providers : [PostService]\r\n\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  title = 'CoLAB';\r\n  private id : number;\r\n  private help : any;\r\n  private user : User;\r\n\r\n // private user : User;\r\n  private profilePosts : Post[];\r\n\r\n  constructor(private userService: UserService, private postService : PostService,  private route: ActivatedRoute,\r\n              private location: Location)\r\n  { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.help = this.route.params.subscribe(params => {\r\n      this.id = +params['id']; this.setUser();\r\n    });\r\n  }\r\n\r\n  setUser() {\r\n    // falls es keine Nummer ist\r\n    if(isNaN(this.id)){\r\n      // getGlobalUser details for profile page\r\n      this.postService.getAllPostsByUser(this.userService.getGlobalUser().id).then(res => this.profilePosts = res);\r\n\r\n    }\r\n    else {\r\n      // get details for User with param ID from URL\r\n      this.postService.getAllPostsByUser(this.id).then(res => this.profilePosts = res);\r\n    }\r\n    this.user = this.userService.getGlobalUser();\r\n  }\r\n\r\n  showAll(id:number) : void {\r\n    this.postService.getAllPostsByUser(this.id).then(res => this.profilePosts = res);\r\n  }\r\n\r\n  onlyOwnPosts(id:number) : void {\r\n    this.postService.getOnlyPostsByUser(this.id).then(res => this.profilePosts = res);\r\n  }\r\n\r\n  onlyOwnReplies(id:number) : void {\r\n    this.postService.getOnlyRepliesByUser(this.id).then(res => this.profilePosts = res);\r\n  }\r\n\r\n  setId(num : number) {\r\n    this.id = num;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/profile.component.ts","import {Component, Input, OnInit} from '@angular/core';\r\nimport { ProfileBadgeData } from './profilebadge';\r\nimport { UserService } from './user.service';\r\nimport { User } from './user';\r\n\r\n@Component\r\n({\r\n  selector: 'profileBadge',\r\n  template: `\t\t\r\n    <div class=\"col_1_adjusted\">\r\n      <div class=\"feedtext\">\r\n        You\r\n      </div>\r\n\r\n      <img src=\"vivalderino.jpg\" class=\"profilepic\">\r\n      <br>\r\n      <div class=\"profilestats\">\r\n        Amount of posts:\r\n        <br> {{user.name}}test\r\n        <br>\r\n        Amount of views:\r\n        <br>\r\n        1337\r\n      </div>\r\n      <br>\r\n      <div class=\"profstatdiv\">\r\n        <ul class=\"profilestatul\">\r\n          <li class=\"leftli\" routerLink=\"\"><a><i class=\"material-icons\">keyboard_arrow_right</i> Feed</a></li>\r\n          <li class=\"leftli\" routerLink=\"/profile\"><a ><i class=\"material-icons\">keyboard_arrow_right</i> Profile</a></li>\r\n          <li class=\"leftli\" routerLink=\"/settings\"><a><i class=\"material-icons\">keyboard_arrow_right</i> Settings</a></li>\r\n          <li class=\"leftli\" routerLink=\"/logout\"><a><i class=\"material-icons\">keyboard_arrow_right</i> Signout</a></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\n\r\nexport class ProfileBadge implements OnInit {\r\n\r\n  user : User;\r\n\r\n  constructor(private userService: UserService) {\r\n\r\n  }\r\n\r\n  ngOnInit() : void {\r\n    this.user = this.userService.getGlobalUser();\r\n    console.log(this.user.name);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/profilebadge.component.ts","import { Component, Input } from '@angular/core';\r\nimport { Post } from './post';\r\nimport { PostService } from './postit.service';\r\n\r\n@Component ({\r\n  selector: 'sortby',\r\n  template: `\t\t\t<div class=\"sortby\">\r\n    <div class=\"sortheading\">\r\n      <i class=\"material-icons\">sort</i> Sort feed\r\n    </div>\r\n    <div class=\"ulersatz\">\r\n      <a href=\"#\">\r\n        <!-- <span class=\"marker\">&nbsp;</span> --><span (click)=\"sortNewest()\">Newest</span>\r\n      </a>\r\n    </div>\r\n    <div class=\"ulersatz\">\r\n      <a href=\"#\">\r\n        <!-- <span class=\"marker\">&nbsp;</span> --><span (click)=\"sortOldest()\">Oldest</span>\r\n      </a>\r\n    </div>\r\n    <div class=\"ulersatz\">\r\n      <a href=\"#\">\r\n        <!-- <span class=\"marker\">&nbsp;</span> --><span (click)=\"sortPopular()\">Most popular</span>\r\n      </a>\r\n    </div>\r\n  </div>\r\n`,\r\n  providers: [PostService]\r\n})\r\n\r\nexport class SortBy {\r\n  @Input() feedPosts : Post[];\r\n\r\n  constructor(private postService: PostService)\r\n  {\r\n  }\r\n\r\n  sortNewest(): void {\r\n    this.postService.getSortedByNewest().then(res => this.feedPosts = res);\r\n  }\r\n\r\n  sortOldest(): void {\r\n    this.postService.getSortedByOldest().then(res => this.feedPosts = res);\r\n  }\r\n\r\n  sortPopular(): void {\r\n    this.postService.getSortedByPopular().then(res => this.feedPosts = res);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/sortfeed.component.ts","import { Injectable, OnInit} from '@angular/core';\r\nimport { User } from './user';\r\nimport { Headers, Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { of } from 'rxjs/observable/of';\r\nimport 'rxjs/Rx';\r\nimport {Observable} from 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class UserService implements OnInit{\r\n\r\n\r\n\r\n   constructor(private http: Http) { }\r\n\r\n  private url = 'http://127.0.0.1:8080/Webtech2Project/rest/userservice/find/';\r\n   testUser: User = new User();\r\n\r\n\r\n  ngOnInit() : void {\r\n    this.testUser.id = 1;\r\n    this.testUser.avatar=\"test\";\r\n    this.testUser.birth_date=1111111;\r\n    this.testUser.email=\"test@test\";\r\n    this.testUser.fax=\"fax123\";\r\n    this.testUser.gender=\"male\";\r\n    this.testUser.location=\"zuhause\";\r\n    this.testUser.name=\"aram sam sam sam\";\r\n    this.testUser.password=\"niemals\";\r\n    this.testUser.phone=\"Telefooooon\";\r\n    this.testUser.register_date=11223344;\r\n    this.testUser.surname=\"nachname\";\r\n    this.testUser.postits = null;\r\n    this.testUser.position = 2;\r\n  }\r\n getUser(id : number) : Promise<User> {\r\n\r\n  return this.http.get(this.url+id)\r\n      .toPromise()\r\n      .then(response =>  response.json().user as User );\r\n }\r\n\r\n  setUser(u : User) : void {\r\n   this.testUser = u;\r\n  }\r\n\r\n  getGlobalUser() : User {\r\n   return this.testUser;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/user.service.ts","export class User {\r\n  id: number;\r\n  avatar: string;\r\n  birth_date: number;\r\n  email: string;\r\n  fax: string;\r\n  gender: string;\r\n  location: string;\r\n  name: string;\r\n  password: any;\r\n  phone: string;\r\n  register_date: number;\r\n  surname:string;\r\n  postits: any[];\r\n  position: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/app/user.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/split/Desktop/CoLAB versions/v2.1/colab/src/main.ts"],"sourceRoot":""}